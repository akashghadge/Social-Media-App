{"version":3,"sources":["Components/SmallComponents/SnackBarCustom.jsx","Components/SmallComponents/PageBreadcrumb.jsx","helper/http.jsx","Components/Auth/MatchOTP.jsx","Components/Auth/SignUp.jsx","Components/Auth/ForgetPassword.jsx","Components/Auth/SignIn.jsx","assets/images/login.jpg","Components/Auth/Sign.jsx","Components/Navbar/NavbarM.jsx","helper/auth.helper.js","Components/Dashboard/CreatePost.jsx","actions/saveUser.js","Components/Dashboard/MyPost.jsx","Components/Dashboard/ProfileMain.jsx","Components/Dashboard/Settings.jsx","Components/Auth/ResetPassword.jsx","helper/utilities.js","Components/HomePage/SinglePostHead.jsx","Components/HomePage/SinglePostComments.jsx","Components/HomePage/SinglePost.jsx","Components/HomePage/Post.jsx","Components/HomePage/AllUsers.jsx","Components/HomePage/FollowerSuggestions.jsx","Components/HomePage/Activities.jsx","Components/HomePage/Home.jsx","Components/PublicProfile/PublicPost.jsx","Components/PublicProfile/PublicProfile.jsx","Components/PublicProfile/Followers.jsx","Components/PublicProfile/Following.jsx","contexts/SocketContext.jsx","Components/Chat/ChatWindow.jsx","Components/SmallComponents/SingleUserChat.jsx","Components/Chat/ChatMain.jsx","Components/Dashboard/Notification.jsx","Components/Error/Error.jsx","App.js","reportWebVitals.js","reducers/saveUser.reducer.js","reducers/index.js","store.js","index.js"],"names":["SnackBarCustom","props","_jsx","_Fragment","children","Snackbar","anchorOrigin","vertical","horizontal","open","onClick","handleClickCloseSnackBar","autoHideDuration","SnackbarContent","style","backgroundColor","color","message","text","Pagebreadcrumb","_jsxs","className","heading","aria-label","NavLink","to","url","base","aria-current","expo","baseURL","data","axios","get","this","body","post","comments","PostImage","formdata","fetch","method","MatchOTP","snackbarObj","setSnackbarObj","useState","loading","setLoading","setOpen","allCurrentData","setAllCurrentData","email","otp","inputChange","event","name","value","target","prev","ReactLoading","type","height","width","id","placeholder","onChange","required","htmlFor","http","then","c","flag","m","catch","SignUp","history","useHistory","isLoading","photo","setPhoto","fname","lname","username","password","PicUrl","boxShadow","marginRight","class","e","files","accept","display","justifyContent","alignItems","length","FormData","append","getFormData","res","json","picChange","CreateUser","push","ForgetPassword","setEmail","RequestForgetPassword","openSnackBarForgetPassword","err","SignIn","preventDefault","LogIn","token","jwt","localStorage","setItem","response","data-bs-toggle","data-bs-target","aria-labelledby","aria-hidden","data-bs-dismiss","Sign","signButtonState","signButtonSetState","changeButtonSign","src","loginSrc","aria-pressed","useStyles","makeStyles","theme","AppBar","grow","flexGrow","menuButton","spacing","cursor","title","textAlign","breakpoints","up","sectionDesktop","sectionMobile","navlink","textDecoration","PrimarySearchAppBar","notificationCount","setNotificationCount","LoggedUser","useSelector","state","User","useEffect","console","log","getItem","urlNotification","_id","classes","anchorEl","setAnchorEl","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","keepMounted","transformOrigin","onClose","exact","MenuItem","mobileMenuId","renderMobileMenu","IconButton","Home","AddBox","Badge","badgeContent","MailIcon","NotificationsIcon","aria-controls","aria-haspopup","AccountCircle","position","Toolbar","edge","Dashboard","Typography","variant","noWrap","MoreIcon","GetAuth","Promise","resolve","reject","CreatePost","desc","postedById","user","setUser","PageBreadcrumb","for","undefined","postData","requestOptions","headers","JSON","stringify","saveUser","newUser","payload","SinglePost","ErrorObject","flagForReq","setFlag","handleChangeInPost","commentButton","setCommentButton","commentInfo","setCommentInfo","commentLoading","setCommentLoading","isCreateCommentOn","setCreateCommentOn","newComment","setNewComment","val","postedBy","moment","created","format","alt","likes","includes","Button","removeLike","idPost","idOfPost","alert","Favorite","addLike","FavoriteBorder","postId","onCommentButton","ChatBubbleOutline","AddComment","map","comment","i","idOfComment","idOfCommentorReal","idOfCommentor","deleteComment","Delete","fontSize","addNewComment","Send","urlForDeletePost","profileButtonFollow","ProfileMain","dispatch","useDispatch","followers","setFollowers","following","setFollowing","flagForReqFromState","myPosts","setMyPosts","loadingPost","setLoadingPost","about","href","MyPost","Settings","loadingImg","setLoadingImg","updateData","update","urlUpdateUser","ResetPassword","useParams","setPassword","sendData","newPassword","changePasswordAPI","DateFormate","date","Singleposthead","Singlepostcomments","RemoveComment","closeCommentBox","showCommentButton","setShowCommentButton","isLoggedIn","SinglePostHead","RemoveLike","AddLike","async","getComments","SinglePostComments","Post","totalPosts","setTotalPosts","allpost","getAllPosts","temp","sortBy","sort","a","b","Date","arr","index","AllUsers","allUsers","setAllUsers","allusers","getAllUsers","Followersuggestions","Activities","AccountBox","Notifications","Message","PostAdd","sortByValue","setSortByValue","sortChange","PublicPost","PublicProfile","params","loadingFollow","setLoadingFollow","isFollow","setIsFollow","reloadForUseEffect","setReload","isEmpty","obj","Object","entries","constructor","followBody","userId","some","PublicUserId","userReceive","UnFollowUser","FollowUser","Followers","Following","SocketContext","createContext","ChatWindow","socket","useContext","prevM","setPrevM","reloadHelper","isTyping","setTyping","typerPerson","setTyperPerson","chatBoxInput","setChatBoxInput","SenderId","RecId","recUser","chats","on","setTimeout","recUserName","sender","emit","recipent","Singleuserchat","chatUser","listClasses","changeChatUser","ChatMain","totalUsers","setTotalUsers","setChatUser","newChatUser","newChatUsername","Provider","io","connect","query","Notification","notificationAll","setNotificationAll","notification","createdAt","Error","fontFamily","fontStyle","fontWeight","App","NavbarM","Switch","Route","path","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","saveNewUser","arguments","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.11ce31ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Snackbar, SnackbarContent } from \"@material-ui/core\";\r\nconst SnackBarCustom = (props) => {\r\n    function close() {\r\n        props.handleClickCloseSnackBar();\r\n    }\r\n    return (\r\n        <>\r\n            <Snackbar anchorOrigin={{ vertical: props.vertical, horizontal: props.horizontal }} open={props.open} onClick={close} autoHideDuration={1}>\r\n                <SnackbarContent style={{\r\n                    backgroundColor: props.backgroundColor,\r\n                    color: props.color\r\n                }} message={props.text}></SnackbarContent>\r\n\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SnackBarCustom;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Pagebreadcrumb = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"p-4 bg-transparent\">\r\n                <div className=\"page-header\">\r\n                    <h2 className=\"heading-auth\">{props.heading}</h2>\r\n                </div>\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                        <li className=\"breadcrumb-item\">\r\n                            <NavLink to={`/${props.url}`} className=\"navlink-auth\">{props.base}</NavLink>\r\n                        </li>\r\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">{props.heading}</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pagebreadcrumb;\r\n","import axios from \"axios\";\r\nconst expo = {\r\n    baseURL: \"/\",\r\n    async getAllUsers() {\r\n        const { data } = await axios.get(this.baseURL + \"api/user/all-users-homepage\");\r\n        return data;\r\n    },\r\n    async getAllPosts() {\r\n        const { data } = await axios.get(this.baseURL + \"api/post/all\");\r\n        return data;\r\n    },\r\n    async AddLike(body) {\r\n        return axios.post(this.baseURL + \"api/post/like/add\", body)\r\n    },\r\n    async RemoveLike(body) {\r\n        return axios.post(this.baseURL + \"api/post/like/remove\", body);\r\n    },\r\n    async getComments(body) {\r\n        const { data } = await axios.post(this.baseURL + \"api/post/comment\", body);\r\n        return data.comments;\r\n    },\r\n    async AddComment(body) {\r\n        return axios.post(this.baseURL + \"api/post/comment/add\", body);\r\n    },\r\n    async RemoveComment(body) {\r\n        return axios.post(this.baseURL + \"api/post/comment/remove\", body);\r\n    },\r\n    async LogIn(body) {\r\n        return axios.post(this.baseURL + \"api/user/in\", body);\r\n    },\r\n    async CreateUser(body) {\r\n        return axios.post(this.baseURL + \"api/user/create\", body);\r\n    },\r\n    async PostImage(formdata) {\r\n        return fetch(\"https://api.cloudinary.com/v1_1/asghadge/image/upload\", {\r\n            method: \"post\",\r\n            body: formdata\r\n        })\r\n    },\r\n    async RequestForgetPassword(body) {\r\n        return axios.post(this.baseURL + \"api/mail/forget-password\", body);\r\n    },\r\n    async MatchOTP(body) {\r\n        return axios.post(this.baseURL + \"api/mail/verification\", body);\r\n    },\r\n    async changePasswordAPI(body) {\r\n        return axios.post(this.baseURL + \"api/mail/reset-password\", body);\r\n    },\r\n}\r\n\r\nexport default expo;","import React, { useState } from \"react\"\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport Pagebreadcrumb from \"../SmallComponents/PageBreadcrumb\"\r\nimport ReactLoading from \"react-loading\"\r\nimport http from \"../../helper/http\"\r\n\r\nconst MatchOTP = () => {\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [loading, setLoading] = useState(false);\r\n    let [open, setOpen] = useState(false);\r\n    let [allCurrentData, setAllCurrentData] = useState({\r\n        email: \"\",\r\n        otp: 0,\r\n    });\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    function inputChange(event) {\r\n        const { name, value } = event.target\r\n        setAllCurrentData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    function sendOtp() {\r\n        setLoading(true);\r\n        http.MatchOTP(allCurrentData)\r\n            .then((data) => {\r\n                let c = \"red\";\r\n                if (data.flag) {\r\n                    c = \"green\"\r\n                }\r\n                setSnackbarObj({ text: data.m, backgroundColor: c });\r\n                setOpen(true);\r\n                setLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setSnackbarObj({ text: \"OTP mismatch\", backgroundColor: \"red\" });\r\n                setLoading(false);\r\n                setOpen(true);\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Pagebreadcrumb heading=\"Mail Verification\" base=\"Home\" url=\"\" />\r\n            {\r\n                loading ?\r\n                    <>\r\n                        <div className=\"cotainer-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className=\"container-fluid px-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"heading-auth mt-2 mb-4\">Mail Verification</h1>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-floating mb-3 col-12 col-md-6 px-1\">\r\n                                            <input type=\"email\" className=\"form-control\" id=\"emailMatchOTP\" name=\"email\" placeholder=\"\" value={allCurrentData.email} onChange={inputChange} placeholder=\".\" required></input>\r\n                                            <label htmlFor=\"emailMatchOTP\">Enter Email</label>\r\n                                        </div>\r\n                                        <div className=\"form-floating mb-3 col-12 col-md-6 px-1\">\r\n                                            <input type=\"number\" name=\"otp\" className=\"form-control\" id=\"otpMatchOTP\" placeholder=\"123456\" value={allCurrentData.otp} onChange={inputChange} required></input>\r\n                                            <label htmlFor=\"otpMatchOTP\" >Enter OTP</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center mt-3 d-flex justify-content-center\">\r\n                                        <button className=\"btn btn-outline-success d-block w-50 w-md-25\" type=\"submit\" onClick={sendOtp}>Match OTP</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* snackbar */}\r\n                        <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                            text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default MatchOTP;\r\n","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\n// \thttps://api.cloudinary.com/v1_1/asghadge\r\nimport ReactLoading from \"react-loading\"\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport http from \"../../helper/http\"\r\nconst SignUp = () => {\r\n    let history = useHistory();\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [open, setOpen] = useState(false);\r\n    let [isLoading, setLoading] = useState(false);\r\n    let [photo, setPhoto] = useState(null);\r\n    let [allCurrentData, setAllCurrentData] = useState({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        PicUrl: \"\"\r\n    });\r\n\r\n\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    function inputChange(event) {\r\n        const { id, value } = event.target\r\n        setAllCurrentData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n    function picChange(url) {\r\n        const id = \"PicUrl\";\r\n        const value = url;\r\n        setAllCurrentData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n    function fileInputChange(e) {\r\n        setPhoto(e.target.files[0]);\r\n    }\r\n    function isError() {\r\n        if (allCurrentData.fname.length < 3 || allCurrentData.lname.length < 3) {\r\n            setSnackbarObj({\r\n                text: \"First and Last Name min have 3 letters\", backgroundColor: \"red\"\r\n            });\r\n            setOpen(true);\r\n            return true;\r\n        }\r\n        else if (allCurrentData.username.length < 6 || allCurrentData.password.length < 6) {\r\n            setSnackbarObj({\r\n                text: \"Username and password have min 6 letters\", backgroundColor: \"red\"\r\n            });\r\n            setOpen(true);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function getFormData() {\r\n        let formdata = new FormData();\r\n        formdata.append(\"file\", photo);\r\n        formdata.append(\"upload_preset\", \"social-media\");\r\n        formdata.append(\"cloud_name\", \"asghadge\");\r\n        return formdata;\r\n    }\r\n    function SendUser() {\r\n        if (isError())\r\n            return;\r\n        setLoading(true);\r\n        let formdata = getFormData();\r\n        http.PostImage(formdata)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                picChange(data.url);\r\n                http.CreateUser(allCurrentData)\r\n                    .then(() => {\r\n                        history.push(\"/profile\");\r\n                    })\r\n                    .catch(() => {\r\n                        setSnackbarObj({ text: \"Error Occured\", backgroundColor: \"red\" });\r\n                        setOpen(true);\r\n                        setLoading(false);\r\n                    })\r\n            })\r\n            .catch(() => {\r\n                setSnackbarObj({ text: \"Error Occured\", backgroundColor: \"red\" });\r\n                setOpen(true);\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1 className=\"heading-auth mt-2 mb-4\">Sign Up</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 px-1\">\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"fname\" placeholder=\"john\" value={allCurrentData.fname} onChange={inputChange} required></input>\r\n                            <label htmlFor=\"fname\" >First name</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"john@example.com\" style={{ boxShadow: \"none\" }} onChange={inputChange} value={allCurrentData.email} required></input>\r\n                            <label htmlFor=\"email\" style={{ marginRight: \"1.4rem\" }}>Email</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"password\" className=\"form-control\" placeholder=\"*\" id=\"password\" onChange={inputChange} style={{ boxShadow: \"none\" }} value={allCurrentData.password} required></input>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 px-1\">\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"lname\" placeholder=\"doe\" value={allCurrentData.lname} onChange={inputChange} style={{ boxShadow: \"none\" }} required></input>\r\n                            <label htmlFor=\"lname\" >Last name</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"akash@3\" style={{ boxShadow: \"none\" }} onChange={inputChange} value={allCurrentData.username} required></input>\r\n                            <label htmlFor=\"username\">Username</label>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"ProfilePic\" class=\"upload-box-auth mt-2\">\r\n                                Upload\r\n                            </label>\r\n                            <input type=\"file\" id=\"ProfilePic\" className=\"upload-box-auth\" onChange={fileInputChange} accept=\"image/*\">\r\n                            </input>\r\n                            <span className=\"text-sm text-muted\">Profile Picture</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    (isLoading) ?\r\n                        <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div> :\r\n                        <div className=\"d-flex justify-content-center mb-3\">\r\n                            <button className=\"btn btn-default d-block w-50\" onClick={SendUser}>Create Account</button>\r\n                        </div>\r\n                }\r\n            </div>\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>\r\n    )\r\n}\r\nexport default SignUp;\r\n","import React, { useState } from \"react\"\r\nimport ReactLoading from \"react-loading\"\r\nimport http from \"../../helper/http\";\r\n\r\nconst ForgetPassword = (props) => {\r\n    // loading state\r\n    let [loading, setLoading] = useState(false);\r\n    let [email, setEmail] = useState(\"\");\r\n    function changeEmail(e) {\r\n        setEmail(e.target.value);\r\n    }\r\n    function sendResetLink(e) {\r\n        setLoading(true);\r\n        const body = {\r\n            email: email\r\n        };\r\n        http.RequestForgetPassword(body)\r\n            .then((data) => {\r\n                props.openSnackBarForgetPassword(1);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                props.openSnackBarForgetPassword(0);\r\n                setLoading(false);\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                loading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"py-4\">\r\n                                <div className=\"form-floating\">\r\n                                    <input id=\"forget-password\" type=\"email\" className=\"form-control\" placeholder=\"john@gmail.com\" value={email} onChange={changeEmail}></input>\r\n                                    <label htmlFor=\"forget-password\">Please Enter Email </label>\r\n                                </div>\r\n                                <div className=\"text-center mt-3\">\r\n                                    <button className=\"btn btn-outline-success\" onClick={sendResetLink}>Send Link</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ForgetPassword;\r\n","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport ReactLoading from \"react-loading\"\r\nimport ForgetPassword from \"./ForgetPassword\";\r\nimport http from \"../../helper/http\";\r\n\r\nconst SignIn = () => {\r\n    let history = useHistory();\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [loading, setLoading] = useState(false);\r\n    let [open, setOpen] = useState(false);\r\n    let [allCurrentData, setAllCurrentData] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    function inputChange(event) {\r\n        const { id, value } = event.target\r\n        setAllCurrentData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n    function SendUser(event) {\r\n        event.preventDefault()\r\n        setLoading(true);\r\n\r\n        http.LogIn(allCurrentData)\r\n            .then((data) => {\r\n                let token = data.data.jwt;\r\n                localStorage.setItem(\"token\", token);\r\n                setAllCurrentData({ username: \"\", password: \"\" })\r\n                setSnackbarObj({ text: `hello ${allCurrentData.username}`, backgroundColor: \"green\" })\r\n                setOpen(true);\r\n                setLoading(false);\r\n                history.push(\"/profile\");\r\n            })\r\n            .catch((err) => {\r\n                // axios error or some bug isssue\r\n                setSnackbarObj({ text: err.response.data, backgroundColor: \"red\" })\r\n                setOpen(true);\r\n                setLoading(false);\r\n            })\r\n    }\r\n    function openSnackBarForgetPassword(flag) {\r\n        if (flag) {\r\n            setSnackbarObj({ text: `Link Send Successfully please check email`, backgroundColor: \"green\" })\r\n            setOpen(true);\r\n        }\r\n        else {\r\n            setSnackbarObj({ text: `Fail send link please enter valid email`, backgroundColor: \"red\" })\r\n            setOpen(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ? <>\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n                        <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                    </div>\r\n                </> :\r\n                    <>\r\n                        <h1 className=\"heading-auth mt-2 mb-4\">Sign In</h1>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"akash@3\" onChange={inputChange} value={allCurrentData.username} required></input>\r\n                            <label htmlFor=\"username\">Enter Username</label>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3\">\r\n                            <input type=\"password\" className=\"form-control\" id=\"password\" onChange={inputChange} placeholder=\"*\" value={allCurrentData.password} required></input>\r\n                            <label htmlFor=\"password\">Enter Password</label>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center mb-3\">\r\n                            <button className=\"btn btn-default d-block w-50\" onClick={SendUser}>Login</button>\r\n                        </div>\r\n                        <p className=\"modal-button text-center d-block\" data-bs-toggle=\"modal\" data-bs-target=\"#forget-modal\">\r\n                            Forget Password\r\n                        </p>\r\n\r\n                        <div class=\"modal fade\" id=\"forget-modal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                            <div class=\"modal-dialog modal-dialog-centered\">\r\n                                <div class=\"modal-content\">\r\n                                    <div class=\"modal-header\">\r\n                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Forget Password</h5>\r\n                                        <button type=\"button\" class=\"btn-close btn-outline-danger\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                    </div>\r\n                                    <div class=\"modal-body\">\r\n                                        <ForgetPassword openSnackBarForgetPassword={openSnackBarForgetPassword}></ForgetPassword>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* snackbar */}\r\n                        <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                            text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default SignIn;\r\n","export default __webpack_public_path__ + \"static/media/login.7f88e85e.jpg\";","import React, { useState } from \"react\"\r\nimport SignUp from \"./SignUp\";\r\nimport SignIn from \"./SignIn\"\r\nimport loginSrc from \"../../assets/images/login.jpg\"\r\nconst Sign = () => {\r\n    let [signButtonState, signButtonSetState] = useState(1);\r\n    function changeButtonSign(e) {\r\n        signButtonSetState(e);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 px-0\" >\r\n                    <img src={loginSrc} className=\"img-fluid d-none d-md-block h-100\"></img>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 bg-transparent\">\r\n                    <div className=\"text-center\">\r\n                        <button className=\"btn btn-outline-default active\" name=\"signup\" aria-pressed=\"true\" value=\"0\" onClick={(e) => changeButtonSign(0)}>Sign Up</button>\r\n                        <button className=\"btn btn-outline-default active\" aria-pressed=\"true\" name=\"signin\" value=\"1\" onClick={(e) => changeButtonSign(1)}>Sign In</button>\r\n                    </div>\r\n                    <div className=\"card m-3\">\r\n                        <div className=\"card-body\">\r\n                            {\r\n                                signButtonState === 1 ? <SignIn /> : <SignUp />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Sign;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { AddBox, Dashboard, Home } from \"@material-ui/icons\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from \"axios\"\r\nimport { useSelector } from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n    AppBar: {\r\n        color: \"#ffffff\",\r\n        backgroundColor: \"#220080\",\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        '&:hover': {\r\n            cursor: \"pointer\"\r\n        }\r\n    },\r\n    title: {\r\n        // display: 'none',\r\n        textAlign: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    navlink: {\r\n        textDecoration: \"none\",\r\n        color: \"inherit\",\r\n        '&:hover': {\r\n            color: \"inherit\"\r\n        }\r\n    }\r\n}));\r\nexport default function PrimarySearchAppBar() {\r\n    let [notificationCount, setNotificationCount] = useState(0);\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n    useEffect(() => {\r\n        console.log(\"use effect\");\r\n        let token = localStorage.getItem(\"token\");\r\n        if (token == null) {\r\n            setNotificationCount(0);\r\n        }\r\n        else {\r\n            const urlNotification = \"/api/notification/all\";\r\n            axios.post(urlNotification, {\r\n                token: token\r\n            })\r\n                .then((data) => {\r\n                    if (data.data === null || data.data.length === 0) {\r\n                        setNotificationCount(0);\r\n                    }\r\n                    else {\r\n                        setNotificationCount(data.data.length);\r\n                    }\r\n                })\r\n        }\r\n    }, [LoggedUser._id])\r\n\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    // small subbox menu for profile section\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <NavLink exact to=\"/profile\" className={classes.navlink}>\r\n                <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            </NavLink>\r\n            <NavLink exact to=\"/settings\" className={classes.navlink}>\r\n                <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n            </NavLink>\r\n            <NavLink exact to=\"/sign\" className={classes.navlink}>\r\n                <MenuItem onClick={handleMenuClose}>Sign In/Up</MenuItem>\r\n            </NavLink>\r\n        </Menu>\r\n    );\r\n\r\n    // for mobile menu : <- in \r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <NavLink exact to=\"/\" className={classes.navlink}>\r\n                <MenuItem>\r\n                    <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                        <Home />\r\n                    </IconButton>\r\n                    <p className=\"mb-0\">Home</p>\r\n                </MenuItem>\r\n            </NavLink>\r\n            <NavLink exact to=\"/create-post\" className={classes.navlink}>\r\n                <MenuItem>\r\n                    <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                        <AddBox />\r\n                    </IconButton>\r\n                    <p className=\"mb-0\">Create</p>\r\n                </MenuItem>\r\n            </NavLink>\r\n            <NavLink exact to=\"/messages\" className={classes.navlink}>\r\n                <MenuItem>\r\n                    <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                        <Badge badgeContent={0} color=\"secondary\">\r\n                            <MailIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <p className=\"mb-0\">Messages</p>\r\n                </MenuItem>\r\n            </NavLink>\r\n            <NavLink exact to=\"/notifications\" className={classes.navlink}>\r\n                <MenuItem>\r\n                    <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                        <Badge badgeContent={notificationCount} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <p className=\"mb-0\">Notifications</p>\r\n                </MenuItem>\r\n            </NavLink>\r\n            <NavLink exact to=\"/profile\" className={classes.navlink}>\r\n                <MenuItem onClick={handleProfileMenuOpen}>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"primary-search-account-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <p className=\"mb-0\">Profile</p>\r\n                </MenuItem>\r\n            </NavLink>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        // for main desktop menu\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"relative\" className={classes.AppBar}>\r\n                <Toolbar>\r\n                    <NavLink exact to=\"/\" className={classes.navlink}>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                        >\r\n                            <Dashboard />\r\n                        </IconButton>\r\n                    </NavLink>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Social-Media\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <NavLink exact to=\"/\" className={classes.navlink}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge color=\"secondary\">\r\n                                    <Home />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <NavLink exact to=\"/create-post\" className={classes.navlink}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge color=\"secondary\">\r\n                                    <AddBox />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <NavLink exact to=\"/messages\" className={classes.navlink}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge badgeContent={0} color=\"secondary\">\r\n                                    <MailIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <NavLink exact to=\"/notifications\" className={classes.navlink}>\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={notificationCount} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\">\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\">\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n// auth code basic\r\nconst GetAuth = () => {\r\n    return new Promise\r\n        (function (resolve, reject) {\r\n            const urlAuth = \"/api/dashboard/me\";\r\n            let token = localStorage.getItem(\"token\");\r\n            axios\r\n                .post(urlAuth, {\r\n                    token: token\r\n                })\r\n                .then((data) => {\r\n                    resolve(data.data);\r\n                })\r\n                .catch((err) => {\r\n                    reject(err);\r\n                })\r\n        })\r\n}\r\n\r\nexport default GetAuth;","import React, { useState, useEffect } from \"react\"\r\nimport GetAuth from \"../../helper/auth.helper\";\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport PageBreadcrumb from \"../SmallComponents/PageBreadcrumb\"\r\nimport ReactLoading from \"react-loading\"\r\nimport { useHistory } from \"react-router-dom\"\r\nconst CreatePost = () => {\r\n    // declarations\r\n    let history = useHistory();\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [open, setOpen] = useState(false);\r\n    let [allCurrentData, setAllCurrentData] = useState({\r\n        photo: \"\",\r\n        desc: \"\",\r\n        postedById: \"\"\r\n    });\r\n    let [photo, setPhoto] = useState(null);\r\n    // setting loading true when we request add new  in database\r\n    let [isLoading, setLoading] = useState(false);\r\n    let [user, setUser] = useState({});\r\n\r\n    // lifecycle\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        GetAuth()\r\n            .then((data) => {\r\n                setUser(data);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                history.push(\"/sign\");\r\n                setLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    // methods\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    function inputChange(event) {\r\n        const { id, value } = event.target\r\n        setAllCurrentData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n    function fileInputChange(e) {\r\n        setPhoto(e.target.files[0]);\r\n    }\r\n    function SendPost(e) {\r\n        if (user.id == undefined || user.id == null) {\r\n            setSnackbarObj({ text: \"Please Sign To Create Post\", backgroundColor: \"red\" });\r\n            setOpen(true);\r\n            return;\r\n        }\r\n        if (allCurrentData.desc.length == 0) {\r\n            // notification\r\n            setSnackbarObj({ text: \"Post Must Contain description\", backgroundColor: \"red\" });\r\n            setOpen(true);\r\n            return;\r\n        }\r\n        const urlUploadCloud = \"https://api.cloudinary.com/v1_1/asghadge/image/upload\";\r\n        const urlServerUploadPost = \"/api/post/new\";\r\n        let formdata = new FormData();\r\n        formdata.append(\"file\", photo);\r\n        formdata.append(\"upload_preset\", \"social-media\");\r\n        formdata.append(\"cloud_name\", \"asghadge\");\r\n        setLoading(true);\r\n        fetch(urlUploadCloud,\r\n            {\r\n                method: \"post\",\r\n                body: formdata\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let postData = {\r\n                    postedById: user.id,\r\n                    photo: data.url,\r\n                    desc: allCurrentData.desc\r\n                }\r\n                const requestOptions = {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(postData)\r\n                };\r\n                fetch(urlServerUploadPost, requestOptions)\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        // notification\r\n                        setSnackbarObj({ text: \"Post Created\", backgroundColor: \"green\" });\r\n                        setOpen(true);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((err) => {\r\n                        // notification\r\n                        setSnackbarObj({ text: \"Post Not created\", backgroundColor: \"red\" });\r\n                        setOpen(true);\r\n                        setLoading(false);\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                // notification\r\n                setSnackbarObj({ text: \"Post Not created\", backgroundColor: \"red\" });\r\n                setOpen(true);\r\n                setLoading(false);\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <PageBreadcrumb heading=\"Upload Post\" base=\"Dashboard\" url=\"profile\" />\r\n            <div className=\"container-fluid px-5\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body row\">\r\n                        <h1 className=\"heading-auth mt-2 mb-4\">Create Post</h1>\r\n                        <div className=\"col-12 col-md-6 mb-3 container-center-all\">\r\n                            <span className=\"text-dash\">Share Image</span>\r\n                            <label for=\"postPic\" class=\"input-file-dash-create-post\">\r\n                                Upload Image\r\n                            </label>\r\n                            <input type=\"file\" id=\"postPic\" className=\"input-file-dash-create-post\" onChange={fileInputChange} accept=\"image/*\">\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"form-floating mb-3 col-12 col-md-6\">\r\n                            <textarea type=\"text\" className=\"form-control\" id=\"desc\" placeholder=\"add description\" onChange={inputChange} value={allCurrentData.desc} required></textarea>\r\n                            <label htmlFor=\"desc\" >Description</label>\r\n                        </div>\r\n                        {\r\n                            (isLoading) ?\r\n                                <>\r\n                                    <div className=\"container-center-all\">\r\n                                        <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                    </div>\r\n                                </> :\r\n                                <div className=\"text-center my-3\">\r\n                                    <button className=\"btn-success btn\" type=\"submit\" onClick={SendPost}>Share Post</button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>)\r\n}\r\nexport default CreatePost;\r\n","const saveUser = (newUser) => {\r\n    return {\r\n        type: \"SAVEUSER\",\r\n        payload: newUser\r\n    }\r\n}\r\n\r\n\r\nexport default saveUser;","import React, { useState, useEffect } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport moment from \"moment\"\r\nimport { Favorite, FavoriteBorder, ChatBubbleOutline, AddComment, Send, DeleteForeverOutlined, Delete } from \"@material-ui/icons\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport ReactLoading from \"react-loading\"\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nconst SinglePost = (props) => {\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [open, setOpen] = useState(false);\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    const ErrorObject =\r\n    {\r\n        backgroundColor: \"red\",\r\n        text: \"Your Not Loggedin\"\r\n    }\r\n    let history = useHistory();\r\n    // getting current user\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n    // flag for sending signal to relaod post data\r\n    let [flagForReq, setFlag] = useState(0);\r\n    useEffect(() => {\r\n        props.handleChangeInPost(flagForReq);\r\n    }, [flagForReq]);\r\n\r\n    // add like if user is not logged in or after logged in it refreshes page we not add like other wise\r\n    // we route it to profile\r\n    const addLike = (event, idPost) => {\r\n        if (!LoggedUser._id) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        const urlAddLike = \"/api/post/like/add\";\r\n        let token = localStorage.getItem(\"token\");\r\n\r\n        const body = {\r\n            token: token,\r\n            idOfPost: idPost\r\n        };\r\n        axios.post(urlAddLike, body)\r\n            .then((data) => {\r\n                setFlag(++flagForReq);\r\n                // showing the snackbar\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"green\",\r\n                        text: \"You Liked Post\"\r\n                    }\r\n                );\r\n                return setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"red\",\r\n                        text: \"Please Logged in Again\"\r\n                    }\r\n                );\r\n                return setOpen(true);\r\n            })\r\n    }\r\n    const removeLike = (event, idPost) => {\r\n        if (!LoggedUser._id) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        const urlRemoveLike = \"/api/post/like/remove\";\r\n        let token = localStorage.getItem(\"token\");\r\n        const body = {\r\n            token: token,\r\n            idOfPost: idPost\r\n        };\r\n        axios.post(urlRemoveLike, body)\r\n            .then((data) => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"gold\",\r\n                        text: \"you dislike post\"\r\n                    }\r\n                );\r\n                return setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n    }\r\n    let [commentButton, setCommentButton] = useState(false);\r\n    let [commentInfo, setCommentInfo] = useState(\"\");\r\n    let [commentLoading, setCommentLoading] = useState(false);\r\n    function onCommentButton(e, postId) {\r\n        setCommentLoading(true);\r\n        setCommentButton(!commentButton);\r\n        const urlComment = \"/api/post/comment\";\r\n        const body = {\r\n            idOfPost: postId\r\n        };\r\n        axios.post(urlComment, body).then((data) => {\r\n            setCommentInfo(data.data.comments);\r\n            setCommentLoading(false);\r\n        })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                setCommentLoading(false);\r\n            });\r\n    }\r\n\r\n    // create comment\r\n    let [isCreateCommentOn, setCreateCommentOn] = useState(false);\r\n    function createCommentButton(e, id) {\r\n        setCreateCommentOn(!isCreateCommentOn);\r\n    }\r\n    let [newComment, setNewComment] = useState(\"\");\r\n    function newCommentHandle(e, idOfPost) {\r\n        setNewComment(e.target.value);\r\n    }\r\n\r\n    // send comment\r\n    function addNewComment(e, idOfPost) {\r\n        const urlForAddNewComment = \"/api/post/comment/add\";\r\n        let token = localStorage.getItem(\"token\");\r\n        const body =\r\n        {\r\n            token: token,\r\n            idOfPost: idOfPost,\r\n            text: newComment\r\n        };\r\n        axios.post(urlForAddNewComment, body)\r\n            .then((data) => {\r\n                setNewComment(\"\");\r\n                setCreateCommentOn(!isCreateCommentOn);\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"green\",\r\n                        text: \"You commented on Post\"\r\n                    }\r\n                );\r\n                return setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                setFlag(++flagForReq);\r\n                console.log(err);\r\n            })\r\n    }\r\n    // deletee the post\r\n    function deletePost(e) {\r\n        const urlForDeletePost = `/api/post/delete/${props.val._id}`\r\n        axios.post(urlForDeletePost, {})\r\n            .then((data) => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"red\",\r\n                        text: \"Post Deleted\"\r\n                    }\r\n                );\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    function deleteComment(e, idOfComment, idOfCommentorReal) {\r\n        // check user logged or not\r\n        if (!LoggedUser._id) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        // commentor id and Logged user is same or not\r\n        if (LoggedUser._id !== idOfCommentorReal) {\r\n            setSnackbarObj(\r\n                {\r\n                    backgroundColor: \"red\",\r\n                    text: \"your not owner of comment so you will not able to delete it\"\r\n                }\r\n            );\r\n            return setOpen(true);\r\n        }\r\n        // delete comment\r\n        const payload = {\r\n            idOfPost: props.val._id,\r\n            idOfComment: idOfComment,\r\n            idOfCommentor: LoggedUser._id\r\n        }\r\n        const urlForRemoveComment = \"/api/post/comment/remove\";\r\n        axios.post(urlForRemoveComment, payload)\r\n            .then((data) => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"red\",\r\n                        text: \"Comment Removed\"\r\n                    }\r\n                );\r\n                setCommentButton(false)\r\n                return setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-center-all mx-3 my-4\">\r\n                <div className=\"card b-radius-card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3 container-center-all\">\r\n                                <img src={props.val.postedBy.PicUrl} className=\"user-post-small-pic\"></img>\r\n                            </div>\r\n                            <div className=\"col-6 d-flex align-item-center\">\r\n                                <div className=\"text-truncate\">\r\n                                    <NavLink className=\"navlink-post-profile\" exact to={`profile/${props.val.postedBy._id}`}>\r\n                                        <h3 className=\"navlink-post-profile mb-0\">{props.val.postedBy.username}</h3>\r\n                                    </NavLink>\r\n                                    <p className=\"full-name-post-profile\">{`${props.val.postedBy.fname} ${props.val.postedBy.lname}`}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-3 container-center-all\">\r\n                                <p className=\"date-post\">{moment(props.val.created).format(\"H:mm a, MMMM Do YYYY\")}</p>\r\n                            </div>\r\n                        </div>\r\n                        {/* <hr></hr> */}\r\n                        <div className=\"container-center-all\">\r\n                            <img src={props.val.photo} className=\"image-post\" alt=\"profile-pic\"></img>\r\n                        </div>\r\n                        <div className=\"image-post m-0\">\r\n                            <p className=\"desc-post text-muted\">{props.val.desc}</p>\r\n                        </div>\r\n                        {/* do in production */}\r\n                        {/* like section */}\r\n                        {\r\n                            (props.val.likes.includes(LoggedUser._id))\r\n                                ?\r\n                                <Button onClick={(e) => { removeLike(e, props.val._id) }}>\r\n                                    <Favorite style={{ color: \"red\" }}></Favorite>\r\n                                    <span className=\"mx-2\">\r\n                                        {props.val.likes.length}\r\n                                    </span>\r\n                                </Button> :\r\n                                <Button onClick={(e) => { addLike(e, props.val._id) }}>\r\n                                    <FavoriteBorder></FavoriteBorder>                            <span className=\"mx-2\">\r\n                                        {props.val.likes.length}\r\n                                    </span>\r\n                                </Button>\r\n                        }\r\n                        {/* comment section */}\r\n                        {\r\n                            <Button onClick={(e) => { onCommentButton(e, props.val._id) }}>\r\n                                <ChatBubbleOutline></ChatBubbleOutline>\r\n                                <span className=\"mx-2\">\r\n                                    {props.val.comments.length}\r\n                                </span>\r\n                            </Button>\r\n                        }\r\n                        {/* create comment */}\r\n                        {\r\n                            <Button onClick={(e) => {\r\n                                createCommentButton(e, props.val._id);\r\n                            }}><AddComment></AddComment></Button>\r\n                        }\r\n                        <div className=\"ml-3\">\r\n                            {\r\n\r\n                                (commentButton) ?\r\n                                    commentLoading ? <>\r\n                                        <div className=\"container-center-all\">\r\n                                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                        </div>\r\n                                    </> :\r\n                                        commentInfo.map((comment, i) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <div className=\"p-1 post-box-content-limiter\">\r\n                                                        <h6 className=\"comment-text\">{comment.text}</h6>\r\n                                                        <div className=\"row justify-content-between\">\r\n                                                            <div className=\"col\">\r\n                                                                <NavLink className=\"comment-username text-muted\" exact to={`profile/${comment.postedBy._id}`}>\r\n                                                                    <p className=\"m-0\">{comment.postedBy.username}</p>\r\n                                                                </NavLink>\r\n                                                                <p className=\"date-post text-muted m-0\">{moment(comment.created).format(\"H:mm a, MMMM Do YYYY\")}</p>\r\n                                                            </div>\r\n                                                            <div className=\"col\">\r\n                                                                {\r\n                                                                    LoggedUser._id === comment.postedBy._id ?\r\n                                                                        <button className=\"btn\" onClick={(e) => {\r\n                                                                            deleteComment(e, comment._id, comment.postedBy._id)\r\n                                                                        }}>\r\n                                                                            <Delete style={{ color: \"red\", fontSize: \"0.8rem\" }}></Delete>\r\n                                                                        </button> : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"comment-box\">\r\n                            {\r\n                                (isCreateCommentOn) ?\r\n                                    <>\r\n                                        <input className=\"comment-input-field\" type=\"text\" onChange={newCommentHandle} value={newComment}></input>\r\n                                        <Button onClick={(e) => {\r\n                                            addNewComment(e, props.val._id);\r\n                                        }} ><Send></Send></Button>\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                        {/* delete post */}\r\n                        <button className=\"btn btn-outline-danger mt-3\" style={{ width: \"100%\" }} onClick={deletePost}>Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>\r\n    )\r\n}\r\nexport default SinglePost;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport saveUser from \"../../actions/saveUser\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MyPost from \"./MyPost\"\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport ReactLoading from \"react-loading\"\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileButtonFollow: {\r\n        color: \"purple\",\r\n        backgroundColor: \"#ffaaff\",\r\n        '&:hover': {\r\n            color: \"white\",\r\n            backgroundColor: \"#ff88ff\",\r\n        },\r\n    }\r\n\r\n}));\r\nconst ProfileMain = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n    // history hook\r\n    let history = useHistory();\r\n    // setting loading true when we request add new  in database\r\n    let [isLoading, setLoading] = useState(false);\r\n    let [followers, setFollowers] = useState([]);\r\n    let [following, setFollowing] = useState([]);\r\n\r\n    let [allCurrentData, setAllCurrentData] = useState({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        PicUrl: \"\"\r\n    });\r\n    // this function will detect the change of flagForReqstate in child class\r\n    let [flagForReq, setFlag] = useState(0);\r\n\r\n    function handleChangeInPost(flagForReqFromState) {\r\n        setFlag(flagForReqFromState);\r\n    }\r\n    // posts my\r\n    let [myPosts, setMyPosts] = useState([]);\r\n    let [loadingPost, setLoadingPost] = useState(false);\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let token = localStorage.getItem(\"token\");\r\n        const urlProfileDetails = \"/api/dashboard/profile\";\r\n        axios.post(urlProfileDetails, { token: token })\r\n            .then((data) => {\r\n                setAllCurrentData(data.data);\r\n                setFollowers(data.data.followers);\r\n                setFollowing(data.data.following);\r\n                // redux storing the user for all usecases\r\n                dispatch(saveUser(data.data));\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                history.push(\"/sign\");\r\n            })\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoadingPost(true);\r\n        let token = localStorage.getItem(\"token\");\r\n        const urlForPosts = \"/api/post/myposts\";\r\n        const payload = {\r\n            token: token\r\n        };\r\n        axios.post(urlForPosts, payload)\r\n            .then((data) => {\r\n                setMyPosts(data.data);\r\n                setLoadingPost(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoadingPost(false);\r\n            })\r\n\r\n    }, [flagForReq])\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </> :\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 container-center-all\">\r\n                            <img className=\"profile-pic-main mt-3 mt-md-0\" src={allCurrentData.PicUrl} width=\"100px\" height=\"100px\" alt=\"profile-pic\"></img>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 p-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3 className=\"mb-0\">{allCurrentData.username}</h3>\r\n                                        <p className=\"text-muted mb-0\">{allCurrentData.fname} {allCurrentData.lname}</p>\r\n                                        <p className=\"\">{allCurrentData.email}</p>\r\n                                        <p className=\"px-4\">{allCurrentData.about}</p>\r\n                                        <div className=\"row\">\r\n                                            <a className=\"col-4 profile-info-stat\" href=\"#profileMyPostContainer\"><span> {myPosts.length}</span> Posts</a>\r\n                                            <NavLink className=\"col-4 profile-info-stat\" exact to={`/profile/${allCurrentData._id}/followers/`}>\r\n                                                <p>\r\n                                                    <span>\r\n                                                        {followers.length}\r\n                                                    </span>\r\n                                                    Followers\r\n                                                </p>\r\n                                            </NavLink>\r\n                                            <NavLink className=\"col-4 profile-info-stat\" exact to={`/profile/${allCurrentData._id}/following/`}>\r\n                                                <p>\r\n                                                    <span> {following.length}</span>\r\n                                                    Following\r\n                                                </p>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {/* post */}\r\n            <div id=\"profileMyPostContainer\">\r\n                {\r\n                    loadingPost ?\r\n                        <>\r\n                            <div className=\"container-center-all\">\r\n                                <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        myPosts.map((val, i) => {\r\n                            return <MyPost val={val} key={val._id} handleChangeInPost={handleChangeInPost}></MyPost>\r\n                        })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ProfileMain;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport ForgetPassword from \"../Auth/ForgetPassword\";\r\nimport ReactLoading from \"react-loading\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Pagebreadcrumb from \"../SmallComponents/PageBreadcrumb\";\r\nconst Settings = () => {\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [open, setOpen] = useState(false);\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    let history = useHistory();\r\n    let [isLoading, setLoading] = useState(false);\r\n    let [allCurrentData, setAllCurrentData] = useState({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        PicUrl: \"\",\r\n        _id: \"\"\r\n    });\r\n    let token = localStorage.getItem(\"token\");\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const urlProfileDetails = \"/api/dashboard/profile-edit\";\r\n        axios.post(urlProfileDetails, { token: token })\r\n            .then((data) => {\r\n                setAllCurrentData(data.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                history.push(\"/sign\");\r\n            })\r\n    }, []);\r\n\r\n    let [photo, setPhoto] = useState(null);\r\n    function fileInputChange(e) {\r\n        setPhoto(e.target.files[0]);\r\n    }\r\n    // radio varibles\r\n    function inputChange(event) {\r\n        const { id, value } = event.target\r\n        setAllCurrentData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [id]: value\r\n            }\r\n        })\r\n    }\r\n    function updateUser(e) {\r\n        if (allCurrentData.fname.length < 3 || allCurrentData.lname.length < 3) {\r\n            setSnackbarObj({ text: \"First and Last name must have atleast 3 letters\", backgroundColor: \"red\" });\r\n            setOpen(true);\r\n        }\r\n        else {\r\n            setLoading(true);\r\n            const urlUpdateUser = \"/api/dashboard/edit\";\r\n            const updateData = {\r\n                id: allCurrentData._id,\r\n                update: allCurrentData,\r\n                token: token\r\n            };\r\n            axios.post(urlUpdateUser, updateData)\r\n                .then((data) => {\r\n                    setSnackbarObj({ text: \"Profile Updated\", backgroundColor: \"green\" });\r\n                    setOpen(true);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    setSnackbarObj({ text: \"No Update\", backgroundColor: \"red\" });\r\n                    setOpen(true);\r\n                    setLoading(false);\r\n                })\r\n        }\r\n    }\r\n    const [loadingImg, setLoadingImg] = useState(false);\r\n    function uploadImage(e) {\r\n        const urlUploadCloud = \"https://api.cloudinary.com/v1_1/asghadge/image/upload\";\r\n        let formdata = new FormData();\r\n        formdata.append(\"file\", photo);\r\n        formdata.append(\"upload_preset\", \"social-media\");\r\n        formdata.append(\"cloud_name\", \"asghadge\");\r\n        setLoadingImg(true);\r\n        fetch(urlUploadCloud,\r\n            {\r\n                method: \"post\",\r\n                body: formdata\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const urlUpdateUser = \"/api/dashboard/edit-dp\";\r\n                const updateData = {\r\n                    id: allCurrentData._id,\r\n                    update: { PicUrl: data.url },\r\n                    token: token\r\n                };\r\n                axios.post(urlUpdateUser, updateData)\r\n                    .then((data) => {\r\n                        setSnackbarObj({ text: \"Profile Updated\", backgroundColor: \"green\" });\r\n                        setLoadingImg(false);\r\n                        setOpen(true);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        setSnackbarObj({ text: \"No Update\", backgroundColor: \"red\" });\r\n                        setOpen(true);\r\n                        setLoadingImg(false);\r\n                    })\r\n\r\n            }).\r\n            catch((err) => {\r\n                setLoadingImg(false);\r\n                console.log(err);\r\n            })\r\n    }\r\n    function openSnackBarForgetPassword(flag) {\r\n        if (flag) {\r\n            setSnackbarObj({ text: `Link Send Successfully please check email`, backgroundColor: \"green\" })\r\n            setOpen(true);\r\n        }\r\n        else {\r\n            setSnackbarObj({ text: `Fail send link please enter valid email`, backgroundColor: \"red\" })\r\n            setOpen(true);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Pagebreadcrumb heading=\"Profile Settings\" base=\"Dashboard\" url=\"profile\" />\r\n            {\r\n                isLoading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className=\"container-fluid px-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"heading-auth mt-2 mb-4\">Update</h1>\r\n                                    <div>\r\n                                        <div className=\"row px-2\">\r\n                                            <div className=\"col-12 col-md-6 pr-2\">\r\n                                                <div className=\"form-floating mb-3\">\r\n                                                    <input type=\"text\" className=\"form-control\" id=\"fname\" placeholder=\"john\" value={allCurrentData.fname} onChange={inputChange} required></input>\r\n                                                    <label htmlFor=\"fname\" >First name</label>\r\n                                                </div>\r\n                                                <div className=\"form-floating mb-3\">\r\n                                                    <textarea type=\"text\" id=\"about\" className=\"form-control\" value={allCurrentData.about} onChange={inputChange} placeholder=\"about ...\"></textarea>\r\n                                                    <label htmlFor=\"about\" >About</label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 col-md-6 px-0\">\r\n                                                <div className=\"form-floating mb-3\">\r\n                                                    <input type=\"text\" className=\"form-control\" id=\"lname\" placeholder=\"doe\" value={allCurrentData.lname} onChange={inputChange} style={{ boxShadow: \"none\" }} required></input>\r\n                                                    <label htmlFor=\"lname\" >Last name</label>\r\n                                                </div>\r\n                                                <div className=\"row text-center text-md-start\">\r\n                                                    <div className=\"col-12  col-md-6 mb-3 mb-md-0\">\r\n                                                        <label htmlFor=\"postPic\" className=\"input-file-dash p-2 m-0 mx-md-4\">\r\n                                                            Upload Here\r\n                                                        </label>\r\n                                                        <input type=\"file\" id=\"postPic\" className=\"input-file-dash\" onChange={fileInputChange} accept=\"image/*\">\r\n                                                        </input>\r\n                                                    </div>\r\n                                                    <div className=\"col-12 col-md-6 mb-3 mb-md-0\">\r\n                                                        {\r\n                                                            loadingImg ?\r\n                                                                <div className=\"container-center-all\">\r\n                                                                    <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                                                </div>\r\n                                                                :\r\n                                                                <button className=\"btn btn-outline-success\" onClick={uploadImage}>Change Image</button>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <p className=\"modal-button text-center d-block\" data-bs-toggle=\"modal\" data-bs-target=\"#forget-modal\">\r\n                                        Change Password\r\n                                    </p>\r\n                                    <div class=\"modal fade\" id=\"forget-modal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                        <div class=\"modal-dialog modal-dialog-centered\">\r\n                                            <div class=\"modal-content\">\r\n                                                <div class=\"modal-header\">\r\n                                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Change Password</h5>\r\n                                                    <button type=\"button\" class=\"btn-close btn-outline-danger\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                                </div>\r\n                                                <div class=\"modal-body\">\r\n                                                    <ForgetPassword openSnackBarForgetPassword={openSnackBarForgetPassword}></ForgetPassword>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center mb-5\">\r\n                                        <button className=\"d-block w-50 btn btn-outline-success\" onClick={updateUser}>Update Changes</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n            }\r\n\r\n\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>\r\n    )\r\n}\r\nexport default Settings;\r\n","import React, { useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport ReactLoading from \"react-loading\"\r\nimport Pagebreadcrumb from \"../SmallComponents/PageBreadcrumb\";\r\nimport http from \"../../helper/http\";\r\n\r\nconst ResetPassword = () => {\r\n    const { token } = useParams();\r\n    // data\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [loading, setLoading] = useState(false);\r\n    let [open, setOpen] = useState(false);\r\n    let [password, setPassword] = useState(\"\");\r\n\r\n    // methods\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    function inputChange(e) {\r\n        setPassword(e.target.value);\r\n    }\r\n    function isError() {\r\n        if (password.length <= 5) {\r\n            setSnackbarObj({ text: \"Password should contain atleast 6 letters\", backgroundColor: \"red\" })\r\n            setOpen(true);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function changePassword(e) {\r\n        if (isError())\r\n            return;\r\n        setLoading(true);\r\n        const sendData = {\r\n            token: token,\r\n            newPassword: password\r\n        };\r\n        http.changePasswordAPI(sendData)\r\n            .then((data) => {\r\n                setSnackbarObj({ text: \"Email is Sent\", backgroundColor: \"green\" });\r\n                setOpen(true);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setSnackbarObj({ text: \"Email is not Sent error occured\", backgroundColor: \"red\" });\r\n                setOpen(true);\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pagebreadcrumb heading=\"Reset Password\" base=\"Home\" url=\"\"></Pagebreadcrumb>\r\n            {\r\n                loading ?\r\n                    <>\r\n                        <div className=\"cotainer-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </> :\r\n                    <>\r\n                        <div className=\"container-fluid px-5\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h1 className=\"heading-auth mt-2 mb-4\">Set New Password</h1>\r\n                                    <div className=\"p-4\">\r\n                                        <div className=\"form-floating mb-3\">\r\n                                            <input type=\"password\" id=\"reset-password\" placeholder=\"temp\" className=\"form-control\" value={password} onChange={inputChange}></input>\r\n                                            <label htmlFor=\"reset-password\">Enter New Password</label>\r\n                                        </div>\r\n                                        <div className=\"text-center mt-3\">\r\n                                            <button className=\"btn btn-outline-success\" onClick={changePassword}>Set Password</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n            }\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>\r\n    )\r\n}\r\nexport default ResetPassword;\r\n","import moment from \"moment\"\r\n\r\nconst DateFormate = (date) => {\r\n    return moment(date).format(\"H:mm a, MM Do YY\");\r\n}\r\n\r\nexport { DateFormate };","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { DateFormate } from '../../helper/utilities';\r\n\r\n\r\nconst Singleposthead = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-3 container-center-all\">\r\n                    <img src={props.val.postedBy.PicUrl} className=\"user-post-small-pic\" alt=\"profile-pic\"></img>\r\n                </div>\r\n                <div className=\"col-6 d-flex align-item-center\">\r\n                    <div className=\"text-truncate\">\r\n                        <NavLink className=\"navlink-post-profile\" exact to={`/profile/${props.val.postedBy._id}`}>\r\n                            <h6 className=\"navlink-post-profile mb-0\">{props.val.postedBy.username}</h6>\r\n                        </NavLink>\r\n                        <p className=\"full-name-post-profile\">{`${props.val.postedBy.fname} ${props.val.postedBy.lname}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3 container-center-all\">\r\n                    <p className=\"date-post\">{DateFormate(props.val.created)}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Singleposthead;\r\n","import React, { useState } from 'react';\r\nimport ReactLoading from \"react-loading\"\r\nimport { DateFormate } from '../../helper/utilities';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Delete } from '@material-ui/icons';\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport http from '../../helper/http';\r\n\r\nconst Singlepostcomments = (props) => {\r\n    let [open, setOpen] = useState(false);\r\n    let [snackbarObj, setSnackbarObj] = useState({ text: \"hello world\", backgroundColor: \"black\" });\r\n    function isLoggedIn() {\r\n        return !props.LoggedUser._id;\r\n    }\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    function deleteComment(e, idOfComment, idOfCommentorReal) {\r\n        if (isLoggedIn()) {\r\n            setSnackbarObj({ backgroundColor: \"red\", text: \"Your Not Loggedin\" });\r\n            return setOpen(true);\r\n        }\r\n        // commentor id and Logged user is same or not\r\n        if (props.LoggedUser._id !== idOfCommentorReal) {\r\n            setSnackbarObj({ backgroundColor: \"red\", text: \"your not owner of comment so you will not able to delete it\" });\r\n            return setOpen(true);\r\n        }\r\n        const payload = {\r\n            idOfPost: props.idOfPost,\r\n            idOfComment: idOfComment,\r\n            idOfCommentor: props.LoggedUser._id\r\n        }\r\n        http.RemoveComment(payload)\r\n            .then(() => {\r\n                props.closeCommentBox();\r\n                setSnackbarObj({ backgroundColor: \"red\", text: \"Comment Removed\" });\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"ml-3\">\r\n                {\r\n                    (props.showCommentButton) ?\r\n                        props.commentLoading ?\r\n                            <>\r\n                                <div className=\"container-center-all\">\r\n                                    <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            props.commentInfo.map((comment, i) => {\r\n                                return (\r\n                                    <div key={comment._id} className=\"p-1 post-box-content-limiter\">\r\n                                        <h6 className=\"comment-text\">{comment.text}</h6>\r\n                                        <div className=\"row justify-content-between\">\r\n                                            <div className=\"col\">\r\n                                                <NavLink className=\"comment-username text-muted\" exact to={`profile/${comment.postedBy._id}`}>\r\n                                                    <p className=\"m-0\">{comment.postedBy.username}</p>\r\n                                                </NavLink>\r\n                                                <p className=\"date-post text-muted m-0\">{DateFormate(comment.created)}</p>\r\n                                            </div>\r\n                                            <div className=\"col\">\r\n                                                {\r\n                                                    props.LoggedUser._id === comment.postedBy._id ?\r\n                                                        <button className=\"btn\" onClick={(e) => {\r\n                                                            deleteComment(e, comment._id, comment.postedBy._id)\r\n                                                        }}>\r\n                                                            <Delete className=\"text-danger btn-custom-sm\"></Delete>\r\n                                                        </button> : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        : null\r\n                }\r\n                {/* snackbar */}\r\n                <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                    text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Singlepostcomments;\r\n","// basic react imports\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Favorite, FavoriteBorder, ChatBubbleOutline, AddComment, Send, Delete } from \"@material-ui/icons\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport http from \"../../helper/http\"\r\nimport SinglePostHead from \"./SinglePostHead\"\r\nimport SinglePostComments from \"./SinglePostComments\"\r\n\r\nconst SinglePost = (props) => {\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n    \r\n    // Data\r\n    let [open, setOpen] = useState(false);\r\n    let [snackbarObj, setSnackbarObj] = useState({ text: \"hello world\", backgroundColor: \"black\" });\r\n    const ErrorObject = { backgroundColor: \"red\", text: \"Your Not Loggedin\" }\r\n    // flag for sending signal to relaod post data\r\n    let [flagForReq, setFlag] = useState(0);\r\n    let [showCommentButton, setShowCommentButton] = useState(false);\r\n    let [commentInfo, setCommentInfo] = useState(\"\");\r\n    let [commentLoading, setCommentLoading] = useState(false);\r\n    let [isCreateCommentOn, setCreateCommentOn] = useState(false);\r\n    let [newComment, setNewComment] = useState(\"\");\r\n\r\n    // lifecycle hook\r\n    useEffect(() => {\r\n        props.handleChangeInPost(flagForReq);\r\n    }, [flagForReq]);\r\n\r\n    // methods\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    function isLoggedIn() {\r\n        return !LoggedUser._id;\r\n    }\r\n    function createCommentButton(e, id) {\r\n        setCreateCommentOn(!isCreateCommentOn);\r\n    }\r\n    function newCommentHandle(e, idOfPost) {\r\n        setNewComment(e.target.value);\r\n    }\r\n    function AlreadyLiked() {\r\n        return props.val.likes.includes(LoggedUser._id);\r\n    }\r\n    function closeCommentBox() {\r\n        setFlag(++flagForReq);\r\n        setShowCommentButton(false);\r\n    }\r\n    const addLike = (event, idPost) => {\r\n        if (isLoggedIn()) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        const payload = {\r\n            token: localStorage.getItem('token'),\r\n            idOfPost: idPost\r\n        };\r\n        http.AddLike(payload)\r\n            .then(() => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj({\r\n                    backgroundColor: \"green\",\r\n                    text: \"You Liked Post\"\r\n                });\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    const removeLike = (event, idPost) => {\r\n        if (isLoggedIn()) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        const payload = {\r\n            token: localStorage.getItem('token'),\r\n            idOfPost: idPost\r\n        };\r\n        http.RemoveLike(payload)\r\n            .then(() => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj({\r\n                    backgroundColor: \"purple\",\r\n                    text: \"You dislike post\"\r\n                });\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n    }\r\n\r\n    async function onCommentButton(e, postId) {\r\n        setShowCommentButton(!showCommentButton);\r\n        setCommentLoading(true);\r\n        const body = { idOfPost: postId };\r\n        let comments = await http.getComments(body);\r\n        setCommentInfo(comments);\r\n        setCommentLoading(false);\r\n    }\r\n\r\n\r\n    function addNewComment(e, idOfPost) {\r\n        if (newComment.length === 0) {\r\n            snackbarObj({ backgroundColor: \"red\", text: \"Empty Text !!!\" });\r\n            return setOpen(true);\r\n        }\r\n        const payload = {\r\n            token: localStorage.getItem('token'),\r\n            idOfPost: idOfPost,\r\n            text: newComment\r\n        };\r\n        http.AddComment(payload)\r\n            .then(() => {\r\n                setNewComment(\"\");\r\n                setCreateCommentOn(!isCreateCommentOn);\r\n                setShowCommentButton(false);\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj({ backgroundColor: \"green\", text: \"You commented on Post\" });\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(ErrorObject);\r\n                setOpen(true);\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-center-all mx-3 my-4\">\r\n                <div className=\"card b-radius-card\">\r\n                    <div className=\"card-body\">\r\n                        {/* heading of Post */}\r\n                        <SinglePostHead val={props.val} />\r\n\r\n                        {/* phot and description */}\r\n                        <div className=\"container-center-all\">\r\n                            <img src={props.val.photo} className=\"image-post\" alt=\"profile-pic\"></img>\r\n                        </div>\r\n                        <div className=\"image-post m-0\">\r\n                            <p className=\"desc-post text-muted\">{props.val.desc}</p>\r\n                        </div>\r\n\r\n                        {/* like section */}\r\n                        {(AlreadyLiked()) ?\r\n                            <Button onClick={(e) => { removeLike(e, props.val._id) }}>\r\n                                <Favorite className=\"text-danger\"></Favorite>\r\n                                <span className=\"mx-2\">\r\n                                    {props.val.likes.length}\r\n                                </span>\r\n                            </Button>\r\n                            : <Button onClick={(e) => { addLike(e, props.val._id) }}>\r\n                                <FavoriteBorder></FavoriteBorder>\r\n                                <span className=\"mx-2\">\r\n                                    {props.val.likes.length}\r\n                                </span>\r\n                            </Button>\r\n                        }\r\n\r\n                        {/* comment section */}\r\n                        <Button onClick={(e) => { onCommentButton(e, props.val._id) }}>\r\n                            <ChatBubbleOutline></ChatBubbleOutline>\r\n                            <span className=\"mx-2\">\r\n                                {props.val.comments.length}\r\n                            </span>\r\n                        </Button>\r\n                        <Button onClick={(e) => { createCommentButton(e, props.val._id) }}>\r\n                            <AddComment></AddComment>\r\n                        </Button>\r\n                        <SinglePostComments LoggedUser={LoggedUser} showCommentButton={showCommentButton} idOfPost={props.val._id} commentLoading={commentLoading} commentInfo={commentInfo} closeCommentBox={closeCommentBox}></SinglePostComments>\r\n\r\n                        <div className=\"container-center-all\">\r\n                            {\r\n                                (isCreateCommentOn) ?\r\n                                    <>\r\n                                        <input className=\"comment-input-field\" type=\"text\" onChange={newCommentHandle} value={newComment}></input>\r\n                                        <Button onClick={(e) => {\r\n                                            addNewComment(e, props.val._id);\r\n                                        }} ><Send></Send></Button>\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>\r\n    )\r\n}\r\nexport default SinglePost;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport SinglePost from \"./SinglePost\"\r\nimport http from \"../../helper/http\";\r\n\r\nconst Post = (props) => {\r\n    let [totalPosts, setTotalPosts] = useState([]);\r\n    // for storing state if state change we need to fetch info again so we show user latest info only\r\n    let [flagForReq, setFlag] = useState(0);\r\n\r\n    useEffect(async () => {\r\n        let allpost = await http.getAllPosts();\r\n        setTotalPosts(allpost)\r\n    }, [flagForReq]);\r\n    // sort feature when props changes\r\n    useEffect(() => {\r\n        const temp = [...totalPosts];\r\n        if (props.sortBy === 'date-sort') {\r\n            temp.sort(function (a, b) {\r\n                return new Date(b.created) - new Date(a.created);\r\n            });\r\n        }\r\n        else if (props.sortBy === 'top-sort') {\r\n            temp.sort(function (a, b) {\r\n                return b.likes.length - a.likes.length\r\n            })\r\n        }\r\n        setTotalPosts(temp);\r\n    }, [props.sortBy])\r\n\r\n    // this function will detect the change of flagForReqstate in child class\r\n    function handleChangeInPost(flagForReqFromState) {\r\n        setFlag(flagForReqFromState);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (totalPosts === undefined) ? null : totalPosts.map((val, i, arr) => {\r\n                    return (\r\n                        <>\r\n                            <SinglePost val={val} index={i} key={val._id} handleChangeInPost={handleChangeInPost} ></SinglePost>\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Post;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport ReactLoading from \"react-loading\"\r\nimport http from \"../../helper/http\";\r\n\r\nconst AllUsers = () => {\r\n    let [loading, setLoading] = useState(false);\r\n    let [allUsers, setAllUsers] = useState([]);\r\n    useEffect(async function () {\r\n        setLoading(true);\r\n        let allusers = await http.getAllUsers();\r\n        setAllUsers(allusers);\r\n        setLoading(false);\r\n\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"mt-3\">\r\n                <div className=\"all-user-container\">\r\n                    {\r\n                        loading ?\r\n                            <>\r\n                                <div className=\"container-center-all\">\r\n                                    <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            allUsers.map((val, i) => {\r\n                                return (\r\n                                    <>\r\n                                        <div key={val._id} className=\"decoration-none mx-3 text-center\">\r\n                                            <img src={val.PicUrl} className=\"all-user-image\" alt=\"user pic\"></img>\r\n                                            <NavLink className=\"decoration-none  text-dark font-weight-bold\" key={i} to={`/profile/${val._id}`}>\r\n                                                <p className=\"mb-0\">{val.username}</p>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </>\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AllUsers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactLoading from \"react-loading\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport http from '../../helper/http';\r\n\r\nconst Followersuggestions = () => {\r\n    let [loading, setLoading] = useState(false);\r\n    let [allUsers, setAllUsers] = useState([]);\r\n    useEffect(async () => {\r\n        setLoading(true);\r\n        let allusers = await http.getAllUsers();\r\n        setAllUsers(allusers);\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card b-radius-card mx-2 mt-3\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"heading-home text-center p-2\">You should follow </h5>\r\n                    <hr></hr>\r\n                    {\r\n                        loading ?\r\n                            <>\r\n                                <div className=\"container-center-all\">\r\n                                    <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            allUsers.map((val, i) => {\r\n                                return (\r\n                                    <div key={val._id} className=\"row decoration-none text-center\">\r\n                                        <div className=\"col-5 container-center-all\">\r\n                                            <img src={val.PicUrl} className=\"all-user-image\" alt=\"user pic\"></img>\r\n                                        </div>\r\n                                        <div className=\"col-7\">\r\n                                            <NavLink className=\"decoration-none  text-dark font-weight-bold\" key={i} to={`/profile/${val._id}`}>\r\n                                                <p className=\"mb-1 text-truncate\">{val.username}</p>\r\n                                            </NavLink>\r\n                                            <NavLink to={`/profile/${val._id}`}>\r\n                                                <button className=\"btn btn-default\">Follow</button>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <hr className=\"my-3\"></hr>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Followersuggestions;\r\n","import React from 'react';\r\nimport { Notifications, Message, PostAdd, AccountBox } from \"@material-ui/icons\"\r\nimport { NavLink } from 'react-router-dom';\r\nconst Activities = () => {\r\n    return (\r\n        <div className=\"card b-radius-card mx-2 mt-3\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"heading-home text-center p-2\">Activities </h5>\r\n                <hr></hr>\r\n                <div className=\"text-center\">\r\n                    <NavLink to=\"/profile\">\r\n                        <button className=\"btn btn-outline-default btn-activity\">\r\n                            <AccountBox></AccountBox>\r\n                            <span className=\"d-block\">Profile</span>\r\n                        </button>\r\n                    </NavLink>\r\n                    <NavLink to=\"/notifications\">\r\n                        <button className=\"btn btn-outline-default btn-activity\">\r\n                            <Notifications></Notifications>\r\n                            <span className=\"d-block\">Notify</span>\r\n                        </button>\r\n                    </NavLink>\r\n                    <NavLink to=\"/messages\">\r\n                        <button className=\"btn btn-outline-default btn-activity\">\r\n                            <Message></Message>\r\n                            <span className=\"d-block\">Messages</span>\r\n                        </button>\r\n                    </NavLink>\r\n                    <NavLink to=\"/create-post\">\r\n                        <button className=\"btn btn-outline-default btn-activity\">\r\n                            <PostAdd></PostAdd>\r\n                            <span className=\"d-block\">Create</span>\r\n                        </button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Activities;\r\n","import React, { useEffect, useState } from \"react\"\r\n// components\r\nimport Post from \"./Post\";\r\nimport AllUsers from \"./AllUsers\";\r\n\r\nimport axios from \"axios\";\r\n// redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport saveUser from \"../../actions/saveUser\"\r\nimport ReactLoading from \"react-loading\"\r\nimport Followersuggestions from \"./FollowerSuggestions\";\r\nimport Activities from \"./Activities\";\r\n\r\n\r\nconst Home = () => {\r\n    // redux stuff\r\n    const dispatch = useDispatch();\r\n    let [loading, setLoading] = useState(false);\r\n    let [sortByValue, setSortByValue] = useState(\"all-sort\");\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\");\r\n        setLoading(true);\r\n        const urlProfileDetails = \"/api/dashboard/profile\";\r\n        axios.post(urlProfileDetails, { token: token })\r\n            .then((data) => {\r\n                // redux storing the user for all usecases\r\n                setLoading(false);\r\n                dispatch(saveUser(data.data));\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n\r\n    function sortChange(e) {\r\n        setSortByValue(e.target.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <div className=\"row container-center-all\">\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <AllUsers></AllUsers>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3 col-12 d-none d-md-block\">\r\n                                <Activities></Activities>\r\n                            </div>\r\n                            <div className=\"col-md-6 col-12\">\r\n                                <div className=\"container-center-all m-0\">\r\n                                    <hr width=\"95%\"></hr>\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <h3 className=\"mx-4 my-2 font-weight-bold\">\r\n                                        Feeds\r\n                                    </h3>\r\n                                    <div className=\"d-flex mx-4 my-2 font-20 cursor-pointer\">\r\n                                        <p onClick={sortChange} id=\"all-sort\" className={`${sortByValue === \"all-sort\" ? 'active-feed-type' : ''} mx-1`}>All</p>\r\n                                        <p onClick={sortChange} id=\"top-sort\" className={`${sortByValue === \"top-sort\" ? 'active-feed-type' : ''} mx-1`}>Top</p>\r\n                                        <p onClick={sortChange} id=\"date-sort\" className={`${sortByValue === \"date-sort\" ? 'active-feed-type' : ''} mx-1`}>Recent</p>\r\n                                    </div>\r\n                                </div>\r\n                                <Post sortBy={sortByValue}></Post>\r\n                            </div>\r\n                            <div className=\"col-md-3 col-12 d-none d-md-block\">\r\n                                <Followersuggestions></Followersuggestions>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { useSelector } from \"react-redux\"\r\nimport moment from \"moment\"\r\nimport { Favorite, FavoriteBorder, ChatBubbleOutline, AddComment, Send, Delete } from \"@material-ui/icons\"\r\nimport { Button } from \"@material-ui/core\"\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport ReactLoading from \"react-loading\"\r\n\r\nconst PublicPost = (props) => {\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [open, setOpen] = useState(false);\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    const ErrorObject =\r\n    {\r\n        backgroundColor: \"red\",\r\n        text: \"Your Not Loggedin\"\r\n    }\r\n    // getting current user\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n    // flag for sending signal to relaod post data\r\n    let [flagForReq, setFlag] = useState(0);\r\n    useEffect(() => {\r\n        props.handleChangeInPost(flagForReq);\r\n    }, [flagForReq]);\r\n\r\n    // add like if user is not logged in or after logged in it refreshes page we not add like other wise\r\n    // we route it to profile\r\n    const addLike = (event, idPost) => {\r\n        if (!LoggedUser._id) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        const urlAddLike = \"/api/post/like/add\";\r\n        let token = localStorage.getItem(\"token\");\r\n\r\n        const body = {\r\n            token: token,\r\n            idOfPost: idPost\r\n        };\r\n        axios.post(urlAddLike, body)\r\n            .then((data) => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"green\",\r\n                        text: \"You Liked Post\"\r\n                    }\r\n                );\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n    }\r\n    const removeLike = (event, idPost) => {\r\n        if (!LoggedUser._id) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        const urlRemoveLike = \"/api/post/like/remove\";\r\n        let token = localStorage.getItem(\"token\");\r\n        const body = {\r\n            token: token,\r\n            idOfPost: idPost\r\n        };\r\n        axios.post(urlRemoveLike, body)\r\n            .then((data) => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"gold\",\r\n                        text: \"you dislike post\"\r\n                    }\r\n                );\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n    }\r\n    let [commentButton, setCommentButton] = useState(false);\r\n    let [commentInfo, setCommentInfo] = useState(\"\");\r\n    let [commentLoading, setCommentLoading] = useState(false);\r\n    function onCommentButton(e, postId) {\r\n        setCommentLoading(true);\r\n        setCommentButton(!commentButton);\r\n        const urlComment = \"/api/post/comment\";\r\n        const body = {\r\n            idOfPost: postId\r\n        };\r\n        axios.post(urlComment, body).then((data) => {\r\n            setCommentInfo(data.data.comments);\r\n            setCommentLoading(false);\r\n        })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                setCommentLoading(false);\r\n            });\r\n    }\r\n\r\n    // create comment\r\n    let [isCreateCommentOn, setCreateCommentOn] = useState(false);\r\n    function createCommentButton(e, id) {\r\n        setCreateCommentOn(!isCreateCommentOn);\r\n    }\r\n    let [newComment, setNewComment] = useState(\"\");\r\n    function newCommentHandle(e, idOfPost) {\r\n        setNewComment(e.target.value);\r\n    }\r\n\r\n    // send comment\r\n    function addNewComment(e, idOfPost) {\r\n        const urlForAddNewComment = \"http://localhost:5000/api/post/comment/add\";\r\n        let token = localStorage.getItem(\"token\");\r\n        const body =\r\n        {\r\n            token: token,\r\n            idOfPost: idOfPost,\r\n            text: newComment\r\n        };\r\n        axios.post(urlForAddNewComment, body)\r\n            .then((data) => {\r\n                setNewComment(\"\");\r\n                setCreateCommentOn(!isCreateCommentOn);\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"green\",\r\n                        text: \"You commented on Post\"\r\n                    }\r\n                );\r\n                return setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                setFlag(++flagForReq);\r\n                console.log(err);\r\n            })\r\n    }\r\n    function deleteComment(e, idOfComment, idOfCommentorReal) {\r\n        // check user logged or not\r\n        if (!LoggedUser._id) {\r\n            setSnackbarObj(ErrorObject);\r\n            return setOpen(true);\r\n        }\r\n        // commentor id and Logged user is same or not\r\n        if (LoggedUser._id !== idOfCommentorReal) {\r\n            setSnackbarObj(\r\n                {\r\n                    backgroundColor: \"red\",\r\n                    text: \"your not owner of comment so you will not able to delete it\"\r\n                }\r\n            );\r\n            return setOpen(true);\r\n        }\r\n        // delete comment\r\n        const payload = {\r\n            idOfPost: props.val._id,\r\n            idOfComment: idOfComment,\r\n            idOfCommentor: LoggedUser._id\r\n        }\r\n        const urlForRemoveComment = \"http://localhost:5000/api/post/comment/remove\";\r\n        axios.post(urlForRemoveComment, payload)\r\n            .then((data) => {\r\n                setFlag(++flagForReq);\r\n                setSnackbarObj(\r\n                    {\r\n                        backgroundColor: \"red\",\r\n                        text: \"Comment Removed\"\r\n                    }\r\n                );\r\n                setCommentButton(false);\r\n                return setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-center-all mx-3 my-4\">\r\n                <div className=\"card b-radius-card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3 container-center-all\">\r\n                                <img src={props.val.postedBy.PicUrl} className=\"user-post-small-pic\" alt=\"User Profile Pictrue\"></img>\r\n                            </div>\r\n                            <div className=\"col-6 d-flex align-item-center\">\r\n                                <div className=\"text-truncate\">\r\n                                    <NavLink className=\"navlink-post-profile\" exact to={`/profile/${props.val.postedBy._id}`}>\r\n                                        <h6 className=\"navlink-post-profile mb-0\">{props.val.postedBy.username}</h6>\r\n                                    </NavLink>\r\n                                    <p className=\"full-name-post-profile\">{`${props.val.postedBy.fname} ${props.val.postedBy.lname}`}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-3 container-center-all\">\r\n                                <p className=\"date-post\">{moment(props.val.created).format(\"H:mm a, MMMM Do YYYY\")}</p>\r\n                            </div>\r\n                        </div>\r\n                        {/* <hr></hr> */}\r\n                        <div className=\"container-center-all\">\r\n                            <img src={props.val.photo} className=\"image-post\" alt=\"profile-pic\"></img>\r\n                        </div>\r\n                        <div className=\"image-post m-0\">\r\n                            <p className=\"desc-post text-muted\">{props.val.desc}</p>\r\n                        </div>\r\n                        {/* do in production */}\r\n                        {/* like section */}\r\n                        {\r\n                            (props.val.likes.includes(LoggedUser._id))\r\n                                ?\r\n                                <Button onClick={(e) => { removeLike(e, props.val._id) }}>\r\n                                    <Favorite style={{ color: \"red\" }}></Favorite>\r\n                                    <span className=\"mx-2\">\r\n                                        {props.val.likes.length}\r\n                                    </span>\r\n                                </Button>\r\n                                : <Button onClick={(e) => { addLike(e, props.val._id) }}>\r\n                                    <FavoriteBorder></FavoriteBorder>\r\n                                    <span className=\"mx-2\">\r\n                                        {props.val.likes.length}\r\n                                    </span>\r\n                                </Button>\r\n                        }\r\n                        {/* comment section */}\r\n                        {\r\n                            <Button onClick={(e) => { onCommentButton(e, props.val._id) }}>\r\n                                <ChatBubbleOutline></ChatBubbleOutline>\r\n                                <span className=\"mx-2\">\r\n                                    {props.val.comments.length}\r\n                                </span>\r\n                            </Button>\r\n                        }\r\n                        {/* create comment */}\r\n                        {\r\n                            <Button onClick={(e) => {\r\n                                createCommentButton(e, props.val._id);\r\n                            }}><AddComment></AddComment></Button>\r\n                        }\r\n                        <div className=\"ml-3\">\r\n                            {\r\n                                (commentButton) ?\r\n                                    commentLoading ?\r\n                                        <>\r\n                                            <div className=\"container-center-all\">\r\n                                                <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                            </div>\r\n                                        </>\r\n                                        :\r\n                                        commentInfo.map((comment, i) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <div className=\"p-1 post-box-content-limiter\">\r\n                                                        <h6 className=\"comment-text\">{comment.text}</h6>\r\n                                                        <div className=\"row justify-content-between\">\r\n                                                            <div className=\"col\">\r\n                                                                <NavLink className=\"comment-username text-muted\" exact to={`profile/${comment.postedBy._id}`}>\r\n                                                                    <p className=\"m-0\">{comment.postedBy.username}</p>\r\n                                                                </NavLink>\r\n                                                                <p className=\"date-post text-muted m-0\">{moment(comment.created).format(\"H:mm a, MMMM Do YYYY\")}</p>\r\n                                                            </div>\r\n                                                            <div className=\"col\">\r\n                                                                {\r\n                                                                    LoggedUser._id === comment.postedBy._id ?\r\n                                                                        <button className=\"btn\" onClick={(e) => {\r\n                                                                            deleteComment(e, comment._id, comment.postedBy._id)\r\n                                                                        }}>\r\n                                                                            <Delete style={{ color: \"red\", fontSize: \"0.8rem\" }}></Delete>\r\n                                                                        </button> : null\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"comment-box\">\r\n                            {\r\n                                (isCreateCommentOn) ?\r\n                                    <>\r\n                                        <input className=\"comment-input-field\" type=\"text\" onChange={newCommentHandle} value={newComment}></input>\r\n                                        <Button onClick={(e) => {\r\n                                            addNewComment(e, props.val._id);\r\n                                        }} ><Send></Send></Button>\r\n                                    </>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>\r\n    )\r\n}\r\nexport default PublicPost;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\";\r\nimport PublicPost from \"./PublicPost\";\r\nimport SnackBarCustom from \"../SmallComponents/SnackBarCustom\"\r\nimport ReactLoading from \"react-loading\"\r\n\r\nconst PublicProfile = () => {\r\n    // instances\r\n    let history = useHistory();\r\n    let params = useParams();\r\n    // getting current user\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n    if (LoggedUser._id === params.id) {\r\n        history.push(\"/profile\");\r\n    }\r\n\r\n    // data\r\n    // main loading for whole page\r\n    let [isLoading, setLoading] = useState(false);\r\n    // public user data\r\n    let [allCurrentData, setAllCurrentData] = useState({\r\n        fname: \"\",\r\n        lname: \"\",\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\",\r\n        PicUrl: \"\"\r\n    });\r\n    let [snackbarObj, setSnackbarObj] = useState({\r\n        text: \"hello world\",\r\n        backgroundColor: \"black\"\r\n    });\r\n    let [open, setOpen] = useState(false);\r\n    // followers and following list of an user\r\n    let [followers, setFollowers] = useState([]);\r\n    let [following, setFollowing] = useState([]);\r\n\r\n    // is follow mechanism\r\n    let [loadingFollow, setLoadingFollow] = useState(true);//loading to check user already followed or not\r\n    let [isFollow, setIsFollow] = useState(false);//flag for follow unfollow\r\n    let [flagForReq, setFlag] = useState(0);\r\n    let [reloadForUseEffect, setReload] = useState(1);\r\n    // posts my\r\n    let [loadingPost, setLoadingPost] = useState(false);\r\n    let [myPosts, setMyPosts] = useState([]);\r\n\r\n    // lifecycles\r\n    // useEffect for getting basic user info\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const urlPublicUser = \"/api/user/public-profile\";\r\n        const body = {\r\n            id: params.id\r\n        };\r\n        axios.post(urlPublicUser, body)\r\n            .then((data) => {\r\n                setAllCurrentData(data.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(err);\r\n            })\r\n    }, []);\r\n    // here we useEffect on reloadFor every time we do follow or unfollw the user so it is real time\r\n    useEffect(() => {\r\n        // fetching follwers and following\r\n        const urlForFollower = \"/api/follow/followers/all\";\r\n        const urlForFollowing = \"/api/follow/following/all\";\r\n        const followBody = {\r\n            userId: params.id\r\n        };\r\n        axios.post(urlForFollower, followBody)\r\n            .then((data) => {\r\n                // for getting follwers we also do check for is user alreasdy followed or not\r\n                setFollowers(data.data.followers);\r\n                if (!isEmpty(LoggedUser) && data.data.followers.some(e => e._id === LoggedUser._id)) {\r\n                    setIsFollow(true);\r\n                }\r\n                else {\r\n                    setIsFollow(false);\r\n                }\r\n                setLoadingFollow(false);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            })\r\n        axios.post(urlForFollowing, followBody)\r\n            .then((data) => {\r\n                setLoading(false);\r\n                setFollowing(data.data.following);\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            })\r\n    }, [reloadForUseEffect])\r\n    useEffect(() => {\r\n        setLoadingPost(true);\r\n        const urlForPosts = \"/api/post/public-user-posts\";\r\n        const payload = {\r\n            id: params.id\r\n        };\r\n        axios.post(urlForPosts, payload)\r\n            .then((data) => {\r\n                setMyPosts(data.data);\r\n                setLoadingPost(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoadingPost(false);\r\n            })\r\n\r\n    }, [flagForReq])\r\n\r\n\r\n    /**\r\n     * Methods\r\n     */\r\n    function handleClickCloseSnackBar() {\r\n        setOpen(false);\r\n    }\r\n    // this function will helps us to check is user object is empty due to refreshing of the user\r\n    function isEmpty(obj) {\r\n        return (Object.entries(obj).length === 0 && obj.constructor === Object)\r\n    }\r\n    // for unfollow we does not need do any check cause unfollow button only see if user exists in follwers list\r\n    function UnFollowUser(e, PublicUserId) {\r\n        let token = localStorage.getItem(\"token\");\r\n        const body = {\r\n            token: token,\r\n            userReceive: PublicUserId\r\n        };\r\n        const urlForUnFollowUser = \"/api/follow/following/remove\"\r\n        axios.post(urlForUnFollowUser, body)\r\n            .then((data) => {\r\n                setReload(reloadForUseEffect + 1);\r\n                setSnackbarObj({ text: \"Succefully Unfollow User\", backgroundColor: \"green\" });\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n    // for follow we always recheck is user already follow this public profile or not\r\n    function FollowUser(e, PublicUserId) {\r\n        let token = localStorage.getItem(\"token\");\r\n        // logged user is empty means user either not signed in or signed in and refresh the page\r\n        if (!isEmpty(LoggedUser)) {\r\n            setIsFollow(true);\r\n        }\r\n        else {\r\n            setSnackbarObj({ text: \"Your not LoggedIn\", backgroundColor: \"red\" });\r\n            setOpen(true);\r\n            return 0;\r\n        }\r\n\r\n        const body = {\r\n            token: token,\r\n            userReceive: PublicUserId\r\n        };\r\n        const urlForFollowUser = \"/api/follow/following/add\"\r\n        axios.post(urlForFollowUser, body)\r\n            .then((data) => {\r\n                setReload(++reloadForUseEffect + 1);\r\n                setSnackbarObj({ text: \"Succefully Follow User\", backgroundColor: \"green\" });\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                alert(err);\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n    // this function will detect the change of flagForReqstate in child class\r\n    function handleChangeInPost(flagForReqFromState) {\r\n        setFlag(flagForReqFromState);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 container-center-all\">\r\n                            <img className=\"profile-pic-main mt-3 mt-md-0 shadow-sm\" src={allCurrentData.PicUrl} width=\"100px\" height=\"100px\" alt=\"profile-pic\"></img>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 p-3\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"text-center\">\r\n                                        <h3 className=\"mb-0\">{allCurrentData.username}</h3>\r\n                                        <p className=\"text-muted\">{allCurrentData.fname} {allCurrentData.lname}</p>\r\n                                        <p className=\"px-4\">{allCurrentData.about}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"my-3 text-center\">\r\n                                        {\r\n                                            loadingFollow ?\r\n                                                <>\r\n                                                    <div className=\"container-center-all\">\r\n                                                        <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                                                    </div>\r\n                                                </>\r\n                                                :\r\n                                                isFollow ?\r\n                                                    <button className=\"btn btn-default\" onClick={(e) => {\r\n                                                        UnFollowUser(e, allCurrentData._id)\r\n                                                    }}>Unfollow</button>\r\n                                                    : <button className=\"btn btn-outline-default\" onClick={(e) => { FollowUser(e, allCurrentData._id) }}>Follow</button>\r\n\r\n                                        }\r\n                                        <NavLink to=\"/messages\" className=\"decoration-none\">\r\n                                            <button className=\"btn btn-outline-primary mx-3\">\r\n                                                Message\r\n                                            </button>\r\n                                        </NavLink>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <a className=\"col-4 profile-info-stat\" href=\"#profileMyPostContainer\"><span> {myPosts.length}</span> Posts</a>\r\n                                        <NavLink className=\"col-4 profile-info-stat\" exact to={`/profile/${params.id}/followers/`}>\r\n                                            <p>\r\n                                                <span>\r\n                                                    {followers.length}\r\n                                                </span>\r\n                                                Followers\r\n                                            </p>\r\n                                        </NavLink>\r\n                                        <NavLink className=\"col-4 profile-info-stat\" exact to={`/profile/${params.id}/following/`}>\r\n                                            <p>\r\n                                                <span> {following.length}</span>\r\n                                                Following\r\n                                            </p>\r\n                                        </NavLink>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {/* post */}\r\n            <div id=\"profileMyPostContainer\">\r\n                {\r\n                    loadingPost ?\r\n                        <>\r\n                            <div className=\"container-center-all\">\r\n                                <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        myPosts.map((val, i) => {\r\n                            return (\r\n                                <>\r\n                                    <PublicPost val={val} key={val.id} handleChangeInPost={handleChangeInPost}></PublicPost>\r\n                                </>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n            {/* snackbar */}\r\n            <SnackBarCustom vertical=\"top\" horizontal=\"right\" backgroundColor={snackbarObj.backgroundColor} color=\"white\" open={open}\r\n                text={snackbarObj.text} handleClickCloseSnackBar={handleClickCloseSnackBar} />\r\n        </>\r\n    )\r\n}\r\nexport default PublicProfile;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\"\r\nimport { AccountBox } from \"@material-ui/icons\";\r\nimport Pagebreadcrumb from \"../SmallComponents/PageBreadcrumb\";\r\n\r\nconst Followers = () => {\r\n    let [isLoading, setLoading] = useState(false);\r\n    let [followers, setFollowers] = useState([]);\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const urlForFollower = \"/api/follow/followers/all\";\r\n        const followBody = {\r\n            userId: params.id\r\n        };\r\n        axios.post(urlForFollower, followBody)\r\n            .then((data) => {\r\n                setFollowers(data.data.followers);\r\n                setLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Pagebreadcrumb heading=\"Followers\" url=\"profile\" base=\"Dashboard\" />\r\n            {\r\n                isLoading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    (followers.length === 0) ?\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"card shadow-sm flex-row\">\r\n                                <div className=\"card-image-top container-center-all p-3\">\r\n                                    <AccountBox></AccountBox>\r\n                                </div>\r\n                                <div className=\"card-body d-flex\">\r\n                                    <h4 className=\"card-title w-50 my-auto text-capitalize\">No Followers</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            {\r\n                                followers.map((val, i) => {\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"container-fluid mb-3\">\r\n                                                <div className=\"card shadow-sm flex-row\">\r\n                                                    <div className=\"card-image-top container-center-all p-3\">\r\n                                                        <img src={val.PicUrl} className=\"user-post-small-pic\" alt=\"User Profile\"></img>\r\n                                                    </div>\r\n                                                    <div className=\"card-body d-flex\">\r\n                                                        <NavLink className=\"card-title font-20 w-50 my-auto text-capitalize navlink-post-profile\" exact to={`/profile/${val._id}/`}>\r\n                                                            <h3 className=\"navlink-post-profile\">{val.username}</h3>\r\n                                                        </NavLink>\r\n                                                        <p className=\"card-text text-muted font-14 w-25 my-auto\">\r\n                                                            {`${val.fname} ${val.lname}`}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Followers;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\"\r\nimport Pagebreadcrumb from \"../SmallComponents/PageBreadcrumb\"\r\nimport { AccountBox } from \"@material-ui/icons\";\r\nconst Following = () => {\r\n    let [isLoading, setLoading] = useState(false);\r\n    const params = useParams();\r\n    let [following, setFollowing] = useState([]);\r\n    useEffect(() => {\r\n        const urlForFollowing = \"/api/follow/following/all\"; const followBody = {\r\n            userId: params.id\r\n        };\r\n        axios.post(urlForFollowing, followBody)\r\n            .then((data) => {\r\n                setLoading(false);\r\n                setFollowing(data.data.following);\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Pagebreadcrumb heading=\"Following\" url=\"profile\" base=\"Dashboard\" />\r\n            {\r\n                isLoading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    (following.length === 0) ?\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"card shadow-sm flex-row\">\r\n                                <div className=\"card-image-top container-center-all p-3\">\r\n                                    <AccountBox></AccountBox>\r\n                                </div>\r\n                                <div className=\"card-body d-flex\">\r\n                                    <h4 className=\"card-title w-50 my-auto text-capitalize\">No Followers</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            {\r\n                                following.map((val, i) => {\r\n                                    return (\r\n                                        <>\r\n                                            <div className=\"container-fluid mb-3\">\r\n                                                <div className=\"card shadow-sm flex-row\">\r\n                                                    <div className=\"card-image-top container-center-all p-3\">\r\n                                                        <img src={val.PicUrl} className=\"user-post-small-pic\" alt=\"user profile\"></img>\r\n                                                    </div>\r\n                                                    <div className=\"card-body d-flex\">\r\n                                                        <NavLink className=\"card-title font-20 w-50 my-auto text-capitalize navlink-post-profile\" exact to={`/profile/${val._id}/`}>\r\n                                                            <h3 className=\"navlink-post-profile\">{val.username}</h3>\r\n                                                        </NavLink>\r\n                                                        <p className=\"card-text text-muted font-14 w-25 my-auto\">\r\n                                                            {`${val.fname} ${val.lname}`}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Following;\r\n","import React from \"react\"\r\nimport io from \"socket.io-client\"\r\nexport const SocketContext = React.createContext();\r\nexport const getSocket = (payload) => {\r\n    let URL = \"/\";\r\n    return io.connect(URL, {\r\n        query: {\r\n            id: payload.id,\r\n            username: payload.username\r\n        }\r\n    })\r\n}\r\n\r\n","// react imports\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory } from 'react-router';\r\n// library imports\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Send } from \"@material-ui/icons\"\r\n// normal imports\r\nimport { SocketContext } from '../../contexts/SocketContext';\r\nimport { DateFormate } from \"../../helper/utilities\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileButtonFollow: {\r\n        color: \"#220080\",\r\n        fontSize: \"30px\",\r\n        '&:hover': {\r\n            color: \"white\",\r\n            backgroundColor: \"#220080\",\r\n        },\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst ChatWindow = (props) => {\r\n    // instances\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n    const socket = useContext(SocketContext);\r\n    // getting current user\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n\r\n    // data\r\n    let [prevM, setPrevM] = useState([]);\r\n    let [reloadHelper, setReload] = useState(1);\r\n    let [isTyping, setTyping] = useState(false);\r\n    let [typerPerson, setTyperPerson] = useState(\"\");\r\n    let [chatBoxInput, setChatBoxInput] = useState(\"\");\r\n\r\n    // lifecycle\r\n    useEffect(() => {\r\n        if (!LoggedUser._id) {\r\n            history.push(\"/profile\");\r\n        }\r\n        const prevChatMessages = \"/api/chat/prev-messages\";\r\n        axios.post(prevChatMessages, {\r\n            SenderId: LoggedUser._id,\r\n            RecId: props.recUser\r\n        }).then((data) => {\r\n            // here if there is no chat then there is no user present there data.data is emtpy it tends to null.chats \r\n            // so we check first\r\n            if (data.data === null) {\r\n                setPrevM([]);\r\n            }\r\n            else {\r\n                setPrevM(data.data.chats);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }, [props.recUser, reloadHelper])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"rec-message\", (data) => {\r\n            setReload(++reloadHelper);\r\n        });\r\n        socket.on(\"rec-typing\", (data) => {\r\n            setTyperPerson(data.username);\r\n            setTyping(true);\r\n            setTimeout(() => {\r\n                setTyping(false);\r\n            }, 3000);\r\n        })\r\n    }, [props.recUser])\r\n\r\n\r\n    // methods\r\n    function inputChange(e) {\r\n        socket.emit(\"typing\", props.recUser);\r\n        setChatBoxInput(e.target.value);\r\n    }\r\n    function sendMessage(e) {\r\n        const payload = {\r\n            recipent: props.recUser,\r\n            text: chatBoxInput\r\n        }\r\n        socket.emit(\"send-message\", payload);\r\n        setReload(++reloadHelper);\r\n        setChatBoxInput(\"\");\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"chat-window-main\">\r\n                {/* -------------------------------------------- */}\r\n                {/* top header section */}\r\n                {/* -------------------------------------------- */}\r\n                <div className=\"bg-white mx-3 mt-3 shadow-sm rounded-3\">\r\n                    <h3 className=\"px-3 pt-3 mb-0 font-weight-bold\">\r\n                        {props.recUserName === undefined ? \"Self Chat :) \" : props.recUserName}\r\n                    </h3>\r\n                    <p className=\"px-3 pb-2 text-muted font-10\">\r\n                        {\r\n                            isTyping ?\r\n                                `${typerPerson} is typing...`\r\n                                : \"Not Active\"\r\n                        }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat-window\">\r\n                    {\r\n                        prevM.length === 0 ?\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <p className=\"chat-prev-no-chats text-muted\">No previous messages</p>\r\n                            </div>\r\n                            :\r\n                            prevM.map((val, i) => {\r\n                                return (\r\n                                    (LoggedUser.username === val.sender.username) ?\r\n                                        <div key={val.created} className=\"d-flex justify-content-end\">\r\n                                            <div className=\"mb-3\">\r\n                                                <p className=\"chat-message-section-user\">{val.text}</p>\r\n                                                <p className=\"chat-message-text text-end\">{val.sender.username}</p>\r\n                                                <p className=\"chat-message-text text-end\">{DateFormate(val.created)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        <div key={val.created} className=\"d-flex justify-content-start px-3\">\r\n                                            <div className=\"mb-3\">\r\n                                                <p className=\"chat-message-section-user-2\">{val.text}</p>\r\n                                                <p className=\"chat-message-text\">{val.sender.username}</p>\r\n                                                <p className=\"chat-message-text\">{DateFormate(val.created)}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n                <div className=\"row justify-content-around px-3\">\r\n                    <div className=\"col-9\">\r\n                        <input type=\"text\" className=\"form-control b-radius-input font-30\" value={chatBoxInput} onChange={inputChange}></input>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button className=\"btn btn-outline-default rounded-2\" onClick={sendMessage}>\r\n                            <Send className={classes.profileButtonFollow}></Send>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n","import React from 'react';\r\n\r\nconst Singleuserchat = (props) => {\r\n    function listClasses(username) {\r\n        let classes = \"shadow-sm p-3 cursor-pointer m-3 text-truncate\";\r\n        if (username === props.chatUser)\r\n            classes += \" active-chat-member\"\r\n        else\r\n            classes += \" \";\r\n        return classes;\r\n    }\r\n    return (\r\n        <>\r\n            <li className={listClasses(props.username)} value={props.id} onClick={(e) => { props.changeChatUser(e, props.id, props.username) }}>\r\n                {props.username}\r\n            </li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Singleuserchat;\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport axios from \"axios\"\r\n\r\nimport ChatWindow from \"./ChatWindow\"\r\nimport { SocketContext, getSocket } from \"../../contexts/SocketContext\"\r\nimport Singleuserchat from \"../SmallComponents/SingleUserChat\"\r\nconst ChatMain = () => {\r\n    let history = useHistory();\r\n    // getting current user\r\n    const LoggedUser = useSelector((state) => {\r\n        return state.User;\r\n    })\r\n\r\n\r\n    let [totalUsers, setTotalUsers] = useState([]);\r\n    let [chatUser, setChatUser] = useState(\"\");\r\n    function isLoggedIn() {\r\n        return (!LoggedUser._id);\r\n    }\r\n    useEffect(() => {\r\n        if (isLoggedIn()) {\r\n            history.push(\"/profile\");\r\n        }\r\n        const payload = {\r\n            id: LoggedUser._id\r\n        }\r\n        // make it get request\r\n        axios.post(\"/api/chat/user-list\", { id: LoggedUser._id })\r\n            .then((data) => {\r\n                setTotalUsers(data.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }, [])\r\n\r\n    function changeChatUser(e, newChatUser, newChatUsername) {\r\n        const newChatUserObj = {\r\n            id: newChatUser,\r\n            username: newChatUsername\r\n        }\r\n        setChatUser(newChatUserObj);\r\n    }\r\n    return (\r\n        <>\r\n            <SocketContext.Provider value={getSocket({ id: LoggedUser._id, username: LoggedUser.username })}>\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n                            <h4 className=\"text-dark bg-transparent mb-0 p-3\">Inbox</h4>\r\n                            <p className=\"text-muted px-3 mt-2\">All users</p>\r\n                            <ul className=\"list-style-none rounded-2 p-0 m-0\">\r\n                                {\r\n                                    totalUsers !== undefined ?\r\n                                        totalUsers.map((val, i) => {\r\n                                            return <Singleuserchat key={val._id} id={val._id} chatUser={chatUser.username} username={val.username} changeChatUser={changeChatUser} />\r\n                                        })\r\n                                        : null\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-9 chat-window-main\">\r\n                            <ChatWindow totalUsers={totalUsers} recUser={chatUser.id} recUserName={chatUser.username} ></ChatWindow>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </SocketContext.Provider>\r\n        </>\r\n    )\r\n}\r\nexport default ChatMain;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport ReactLoading from \"react-loading\"\r\nimport PageBreadcrumb from \"../SmallComponents/PageBreadcrumb\"\r\nimport { Notifications } from \"@material-ui/icons\"\r\nconst Notification = () => {\r\n    let [loading, setLoading] = useState(false);\r\n    let [notificationAll, setNotificationAll] = useState([]);\r\n    let [notificationCount, setNotificationCount] = useState(0);\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"token\");\r\n        if (token == null) {\r\n            setNotificationCount(0);\r\n        }\r\n        else {\r\n            setLoading(true);\r\n            const urlNotification = \"/api/notification/all\";\r\n            axios.post(urlNotification, {\r\n                token: token\r\n            })\r\n                .then((data) => {\r\n                    setLoading(false);\r\n                    if (data.data == null || data.data.length == 0) {\r\n                        setNotificationCount(0);\r\n                    }\r\n                    else {\r\n                        setNotificationAll(data.data);\r\n                        setNotificationCount(0);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false);\r\n                })\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageBreadcrumb heading=\"Notifications\" url=\"profile\" base=\"Dashboard\" />\r\n            {\r\n                loading ?\r\n                    <>\r\n                        <div className=\"container-center-all\">\r\n                            <ReactLoading type={\"bubbles\"} color={\"black\"} height={\"10%\"} width={\"10%\"}></ReactLoading>\r\n                        </div>\r\n                    </>\r\n                    : notificationAll.length == 0 ?\r\n                        <>\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"card shadow-sm flex-row\">\r\n                                    <div className=\"card-image-top container-center-all p-3\">\r\n                                        <Notifications></Notifications>\r\n                                    </div>\r\n                                    <div className=\"card-body d-flex\">\r\n                                        <h4 className=\"card-title w-50 my-auto text-capitalize\">No Notifications</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </> :\r\n                        notificationAll.map((val, i) => {\r\n                            return (\r\n                                <>\r\n                                    <div className=\"container-fluid mb-3\">\r\n                                        <div className=\"card shadow-sm flex-row\">\r\n                                            <div className=\"card-image-top container-center-all p-3\">\r\n                                                <Notifications></Notifications>\r\n                                            </div>\r\n                                            <div className=\"card-body d-flex\">\r\n                                                <h4 className=\"card-title w-50 my-auto text-capitalize\">{val.notification}</h4>\r\n                                                <p className=\"card-text font-14 w-25 my-auto\">\r\n                                                    {moment(val.createdAt).format(\"H:mm a, MMMM Do YYYY\")}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                        })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", height: \"100vh\" }}>\r\n            <p style={{ fontFamily: \"cursive\", fontStyle: \"oblique\", fontWeight: \"700\", fontSize: \"3rem\" }} >Hello you are out of the world!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;\r\n","import './AppCSS.css';\r\nimport MatchOTP from './Components/Auth/MatchOTP';\r\nimport Sign from './Components/Auth/Sign';\r\nimport NavbarM from \"./Components/Navbar/NavbarM\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport CreatePost from './Components/Dashboard/CreatePost';\r\nimport ProfileMain from './Components/Dashboard/ProfileMain';\r\nimport Settings from './Components/Dashboard/Settings';\r\nimport ResetPassword from './Components/Auth/ResetPassword';\r\nimport Home from './Components/HomePage/Home';\r\nimport PublicProfile from './Components/PublicProfile/PublicProfile';\r\nimport Followers from \"./Components/PublicProfile/Followers\"\r\nimport Following from \"./Components/PublicProfile/Following\"\r\nimport ChatMain from './Components/Chat/ChatMain';\r\nimport Notification from './Components/Dashboard/Notification';\r\nimport Error from \"./Components/Error/Error\"\r\nfunction App() {\r\n  return (\r\n    <>\r\n      {/* <Navbar></Navbar> */}\r\n      <NavbarM></NavbarM>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home}></Route>\r\n        <Route exact path=\"/sign\" component={Sign}></Route>\r\n        <Route exact path=\"/match-otp\" component={MatchOTP}></Route>\r\n        <Route exact path=\"/create-post\" component={CreatePost}></Route>\r\n        <Route exact path=\"/profile\" component={ProfileMain}></Route>\r\n        <Route exact path=\"/profile/:id\" component={PublicProfile}></Route>\r\n        <Route exact path=\"/profile/:id/followers\" component={Followers}></Route>\r\n        <Route exact path=\"/profile/:id/following\" component={Following}></Route>\r\n        <Route exact path=\"/settings\" component={Settings}></Route>\r\n        <Route path=\"/reset-password/:token\" component={ResetPassword}></Route>\r\n        <Route path=\"/messages\" component={ChatMain}></Route>\r\n        <Route path=\"/notifications\" component={Notification}></Route>\r\n        {/* error page */}\r\n        <Route component={Error}></Route>\r\n      </Switch>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = null;\r\nconst saveNewUser = (state = initialState, action) => {\r\n    return {\r\n        ...state,\r\n        ...action.payload\r\n    };\r\n}\r\n\r\nexport default saveNewUser;","import saveUser from \"./saveUser.reducer\"\r\nimport { combineReducers } from \"redux\"\r\n\r\nconst rootReducer = combineReducers({\r\n    User: saveUser,\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers/index\"\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './indexCSS.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\n// redux\r\nimport store from './store';\r\n\r\n// bootstrap\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\"\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}